{"version":3,"sources":["components/Message.js","components/Menu.js","lib/collision.js","games/dodge.js","games/noise.js","components/App.js","serviceWorker.js","index.js"],"names":["Message","message","onClick","id","map","text","index","key","DescriptionControl","props","control","className","description","SelectControl","options","i","length","push","value","htmlFor","name","onChange","event","target","BoolControl","type","checked","IntControl","min","max","FloatControl","toFixed","Math","floor","FunctionControl","function","Menu","controls","show","onClickPrevious","onClickNext","title","option","collide","pri","sec","rect1","rect2","x2","x1","y2","y1","collideRectangles","collideCircleRectangle","Error","cir1","cir2","dx","cx","dy","cy","distance","sr","radius","collideCircles","cir","rect","testX","testY","distX","distY","state","applicationState","screen","adjustScale","width","height","scale","offsetX","offsetY","resize","update","player","obstacles","score","keyState","gameOver","frameCount","h","getRandomNumber","gap","w","ObstacleComponent","filter","x","onScreen","getCollisionBounds","showMessage","setOptions","reset","render","ctx","clearRect","fillStyle","fillRect","save","clip","restore","y","handleKeyDown","code","handleKeyUp","random","TextComponent","color","fontName","fontSize","this","font","textAlign","textBaseline","fillText","PlayerComponent","speedX","speedY","beginPath","arc","PI","fill","image","createImageData","size","buffer","data","pos","putImageData","games","gameIndex","gameState","totalFrameTime","paused","sharedState","deltaTime","App","canvasRef","React","useRef","requestRef","previousTimeRef","useState","setUpdate","setMessage","setTitle","previousScene","nextScene","clearMessage","messageTimer","undefined","cancelMessage","useCallback","clearTimeout","setTimeout","forceUpdate","preventDefault","useEffect","canvas","current","getBoundingClientRect","getContext","window","devicePixelRatio","addEventListener","requestAnimationFrame","animate","currentTime","t0","performance","now","t1","shadowOffsetX","shadowOffsetY","shadowColor","shadowBlur","drawFrameTime","removeEventListener","cancelAnimationFrame","ref","setOption","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.23b7d7f3.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Message = ({ message, onClick }) => {\r\n  if (!message) {\r\n    return null;\r\n  }\r\n  return (\r\n    <div id=\"message\" onClick={onClick}>\r\n      {message.map((text, index) => (<div key={index}>{text}</div>))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Message;\r\n","import React from 'react';\r\n\r\nconst DescriptionControl = (props) => {\r\n  const { control } = props;\r\n  return (\r\n    <div className=\"control\">\r\n      {control.description}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst SelectControl = (props) => {\r\n  function onChange(event) {\r\n    props.onChange(control, event.target.value);\r\n  }\r\n  const { control } = props;\r\n  const options = [];\r\n  for (let i = 0; i < control.options.length; i++) {\r\n    options.push(\r\n      (<option key={i} value={i}>{control.options[i]}</option>)\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"control\">\r\n      <label htmlFor={control.name}>{control.name}</label>\r\n      <select id={control.name} className=\"select-css\" value={control.value} onChange={onChange}>\r\n        {options}\r\n      </select>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst BoolControl = (props) => {\r\n  function onChange(event) {\r\n    props.onChange(control, event.target.checked);\r\n  }\r\n  const { control } = props;\r\n  return (\r\n    <div className=\"control\">\r\n      <label className=\"clickable\" htmlFor={control.name}><input className=\"clickable\" id={control.name} type=\"checkbox\" checked={control.value} onChange={onChange} />{control.name}</label>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst IntControl = (props) => {\r\n  function onChange(event) {\r\n    props.onChange(control, event.target.value);\r\n  }\r\n  const { control } = props;\r\n  return (\r\n    <div className=\"control\">\r\n      <label htmlFor={control.name}>{control.name} {control.value}</label>\r\n      <input id={control.name} className=\"clickable\" type=\"range\" min={control.min} max={control.max} value={control.value} onChange={onChange} />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst FloatControl = (props) => {\r\n  const factor = 1000;\r\n  function onChange(event) {\r\n    props.onChange(control, event.target.value / factor);\r\n  }\r\n  const { control } = props;\r\n  return (\r\n    <div className=\"control\">\r\n      <label htmlFor={control.name}>{control.name} {control.value.toFixed(3)}</label>\r\n      <input id={control.name} className=\"clickable\" type=\"range\" min={Math.floor(control.min * factor)} max={Math.floor(control.max * factor)} value={Math.floor(control.value * factor)} onChange={onChange} />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst FunctionControl = (props) => {\r\n  function onClick(event) {\r\n    control.function();\r\n  }\r\n  const { control } = props;\r\n  return (\r\n    <div className=\"control\">\r\n      <button onClick={onClick}>{control.name}</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst Menu = ({ show, onClickPrevious, onClickNext, onChange, title, options }) => {\r\n  if (!show) {\r\n    return null;\r\n  }\r\n  let controls\r\n  if (options) {\r\n    controls = options.map((option, index) => {\r\n      switch (option.type) {\r\n        case 'description':\r\n          return <DescriptionControl key={index} control={option} />\r\n        case 'select':\r\n          return <SelectControl key={index} control={option} onChange={onChange} />\r\n        case 'bool':\r\n          return <BoolControl key={index} control={option} onChange={onChange} />\r\n        case 'int':\r\n          return <IntControl key={index} control={option} onChange={onChange} />\r\n        case 'float':\r\n          return <FloatControl key={index} control={option} onChange={onChange} />\r\n        case 'function':\r\n          return <FunctionControl key={index} control={option} />\r\n        default:\r\n          return (\r\n            <div key={index} className=\"control\">{option.type} is not supported</div>\r\n          );\r\n      }\r\n    });\r\n  }\r\n  return (\r\n    <div id=\"menu-container\">\r\n      <div id=\"menu\">\r\n        <div className=\"none center\">\r\n          <span className=\"left\" onClick={onClickPrevious}>❮ PREV</span>\r\n          {title}\r\n          <span className=\"right\" onClick={onClickNext}>NEXT ❯</span>\r\n        </div>\r\n        <div>\r\n          {controls}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Menu;\r\n","const RECTANGLE = 1;\r\nconst CIRCLE = 2;\r\n\r\nexport function boundingRectangle(x1, y1, x2, y2) {\r\n  return {\r\n    type: RECTANGLE,\r\n    x1,\r\n    y1,\r\n    x2,\r\n    y2\r\n  };\r\n}\r\n\r\nexport function boundingCircle(cx, cy, radius) {\r\n  return {\r\n    type: CIRCLE,\r\n    cx,\r\n    cy,\r\n    radius\r\n  };\r\n}\r\n\r\nexport function collide(pri, sec) {\r\n  switch (pri.type) {\r\n    case RECTANGLE:\r\n      switch (sec.type) {\r\n        case RECTANGLE:\r\n          return collideRectangles(pri, sec);\r\n        case CIRCLE:\r\n          return collideCircleRectangle(sec, pri);\r\n        default:\r\n          throw new Error('cannot collide ' + pri.type + ' ' + sec.type);\r\n      }\r\n    case CIRCLE:\r\n      switch (sec.type) {\r\n        case RECTANGLE:\r\n          return collideCircleRectangle(pri, sec);\r\n        case CIRCLE:\r\n          return collideCircles(pri, sec);\r\n        default:\r\n          throw new Error('cannot collide ' + pri.type + ' ' + sec.type);\r\n      }\r\n    default:\r\n      throw new Error('cannot collide ' + pri.type + ' ' + sec.type);\r\n  }\r\n}\r\n\r\nfunction collideRectangles(rect1, rect2) {\r\n  if (rect1.x2 <= rect2.x1 || rect1.x1 >= rect2.x2 || rect1.y2 <= rect2.y1 || rect1.y1 >= rect2.y2) {\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\n\r\nfunction collideCircles(cir1, cir2) {\r\n  const dx = cir1.cx - cir2.cx;\r\n  const dy = cir1.cy - cir2.cy;\r\n  const distance = dx * dx + dy * dy;\r\n  const sr = cir1.radius + cir2.radius;\r\n  if (distance < sr * sr) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction collideCircleRectangle(cir, rect) {\r\n  let type = 0;\r\n  let testX = cir.cx;\r\n  let testY = cir.cy;\r\n  if (cir.cx < rect.x1) {\r\n    type |= 1;\r\n    testX = rect.x1;\r\n  } else if (cir.cx > rect.x2) {\r\n    type |= 1;\r\n    testX = rect.x2;\r\n  }\r\n  if (cir.cy < rect.y1) {\r\n    type |= 2;\r\n    testY = rect.y1;\r\n  } else if (cir.cy > rect.y2) {\r\n    type |= 2;\r\n    testY = rect.y2;\r\n  }\r\n  const distX = cir.cx - testX;\r\n  const distY = cir.cy - testY;\r\n  const distance = (distX * distX) + (distY * distY);\r\n  if (distance <= cir.radius * cir.radius) {\r\n    return type;\r\n  }\r\n  return 0;\r\n}\r\n","import { collide, boundingRectangle, boundingCircle } from '../lib/collision';\r\n\r\nlet state = {}\r\n\r\nlet applicationState = {};\r\n\r\nconst screen = {\r\n  x: 320,\r\n  y: 180\r\n};\r\n\r\nfunction adjustScale(width, height) {\r\n  state.width = width;\r\n  state.height = height;\r\n  state.scale = Math.min(width / screen.x, height / screen.y);\r\n  state.offsetX = (width - screen.x * state.scale) / 2;\r\n  state.offsetY = (height - screen.y * state.scale) / 2;\r\n}\r\n\r\nexport default function initialize(props) {\r\n  applicationState = props;\r\n  const { width, height } = applicationState;\r\n  state = {\r\n    gameOver: false,\r\n    frameCount: 0,\r\n    obstacles: [],\r\n    player: new PlayerComponent(15, 75, 15, 'red'),\r\n    score: new TextComponent(screen.x, 0, 'white', 'Consolas', 8, 'SCORE: 0'),\r\n    keyState: {}\r\n  };\r\n  adjustScale(width, height);\r\n  return {\r\n    name: 'dodge',\r\n    resize,\r\n    update,\r\n    render,\r\n    handleKeyDown,\r\n    handleKeyUp\r\n  };\r\n}\r\n\r\nfunction resize() {\r\n  const { width, height } = applicationState;\r\n  adjustScale(width, height);\r\n}\r\n\r\nfunction update() {\r\n  const { player, obstacles, score, keyState } = state;\r\n\r\n  if (!state.gameOver) {\r\n    state.frameCount++;\r\n\r\n    if ((state.frameCount % 150) === 1) {\r\n      const h = getRandomNumber(20, 100);\r\n      const gap = getRandomNumber(50, 100);\r\n      const w = Math.floor(state.width / state.scale);\r\n      obstacles.push(new ObstacleComponent(w, 0, 10, h, 'green'));\r\n      obstacles.push(new ObstacleComponent(w, h + gap, 10, screen.y - h - gap, 'green'));\r\n    }\r\n\r\n    player.update(keyState);\r\n\r\n    for (let i = 0; i < obstacles.length; i++) {\r\n      obstacles[i].update();\r\n    }\r\n\r\n    state.obstacles = obstacles.filter(x => x.onScreen);\r\n\r\n    score.text = 'SCORE: ' + state.frameCount;\r\n\r\n    const rect = player.getCollisionBounds();\r\n\r\n    for (let i = 0; i < obstacles.length; i += 1) {\r\n      if (collide(rect, obstacles[i].getCollisionBounds())) {\r\n        state.gameOver = true;\r\n      }\r\n    }\r\n\r\n    if (state.gameOver) {\r\n      applicationState.showMessage(['GAME OVER']);\r\n      applicationState.setOptions([\r\n        {\r\n          type: 'function',\r\n          name: 'RESTART',\r\n          function: reset\r\n        }\r\n      ]);\r\n    }\r\n  }\r\n}\r\n\r\nfunction render() {\r\n  const { ctx } = applicationState;\r\n  const { width, height, player, obstacles, score } = state;\r\n\r\n  ctx.clearRect(0, 0, width, height);\r\n\r\n  ctx.fillStyle = '#111';\r\n  ctx.fillRect(state.offsetX, state.offsetY, screen.x * state.scale, screen.y * state.scale);\r\n\r\n  ctx.save();\r\n  ctx.rect(state.offsetX, state.offsetY, screen.x * state.scale, screen.y * state.scale);\r\n  ctx.clip();\r\n\r\n  player.render(ctx);\r\n\r\n  for (let i = 0; i < obstacles.length; i += 1) {\r\n    obstacles[i].render(ctx);\r\n  }\r\n\r\n  score.render(ctx);\r\n\r\n  ctx.restore();\r\n}\r\n\r\nfunction reset() {\r\n  state.gameOver = false;\r\n  state.frameCount = 0;\r\n  state.obstacles = [];\r\n  state.player.x = 15;\r\n  state.player.y = 75;\r\n  applicationState.setOptions();\r\n}\r\n\r\nfunction handleKeyDown(event) {\r\n  state.keyState[event.code] = true;\r\n}\r\n\r\nfunction handleKeyUp(event) {\r\n  state.keyState[event.code] = false;\r\n}\r\n\r\nfunction getRandomNumber(min, max) {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\n\r\nclass TextComponent {\r\n  constructor(x, y, color, fontName, fontSize, text) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.color = color;\r\n    this.fontName = fontName;\r\n    this.fontSize = fontSize;\r\n    this.text = text;\r\n  }\r\n\r\n  render(ctx) {\r\n    ctx.font = (this.fontSize * state.scale).toFixed(0) + 'px ' + this.fontName;\r\n    ctx.fillStyle = this.color;\r\n    ctx.textAlign = 'right';\r\n    ctx.textBaseline = 'top';\r\n    let { x, y } = this;\r\n    x = x * state.scale + state.offsetX;\r\n    y = y * state.scale + state.offsetY;\r\n    ctx.fillText(this.text, x, y);\r\n  }\r\n}\r\n\r\nclass PlayerComponent {\r\n  constructor(x, y, radius, color) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.radius = radius;\r\n    this.color = color;\r\n    this.speedX = 0;\r\n    this.speedY = 0;\r\n  }\r\n\r\n  update(keyState) {\r\n    this.speedX = 0;\r\n    this.speedY = 0;\r\n\r\n    if (keyState['KeyW'] || keyState['ArrowUp']) {\r\n      this.speedY -= 1;\r\n    }\r\n\r\n    if (keyState['KeyS'] || keyState['ArrowDown']) {\r\n      this.speedY += 1;\r\n    }\r\n\r\n    if (keyState['KeyA'] || keyState['ArrowLeft']) {\r\n      this.speedX -= 1;\r\n    }\r\n\r\n    if (keyState['KeyD'] || keyState['ArrowRight']) {\r\n      this.speedX += 1;\r\n    }\r\n\r\n    this.x += this.speedX;\r\n    this.y += this.speedY;\r\n\r\n    if (this.x < this.radius) {\r\n      this.x = this.radius;\r\n    } else if (this.x + this.radius > screen.x) {\r\n      this.x = screen.x - this.radius;\r\n    }\r\n\r\n    if (this.y < this.radius) {\r\n      this.y = this.radius;\r\n    } else if (this.y + this.radius > screen.y) {\r\n      this.y = screen.y - this.radius;\r\n    }\r\n  }\r\n\r\n  render(ctx) {\r\n    ctx.fillStyle = this.color;\r\n    let { x, y, radius } = this;\r\n    x = x * state.scale + state.offsetX;\r\n    y = y * state.scale + state.offsetY;\r\n    radius *= state.scale;\r\n    ctx.beginPath();\r\n    ctx.arc(x, y, radius, 0, Math.PI * 2, true);\r\n    ctx.fill();\r\n  }\r\n\r\n  getCollisionBounds() {\r\n    return boundingCircle(this.x, this.y, this.radius);\r\n  }\r\n}\r\n\r\nclass ObstacleComponent {\r\n  constructor(x, y, width, height, color) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.width = width;\r\n    this.height = height;\r\n    this.color = color;\r\n    this.onScreen = true;\r\n  }\r\n\r\n  update() {\r\n    this.x--;\r\n    if (this.x + this.width <= 0) {\r\n      this.onScreen = false;\r\n    }\r\n  }\r\n\r\n  render(ctx) {\r\n    ctx.fillStyle = this.color;\r\n    let { x, y, width, height } = this;\r\n    x = x * state.scale + state.offsetX;\r\n    y = y * state.scale + state.offsetY;\r\n    width *= state.scale;\r\n    height *= state.scale;\r\n    ctx.fillRect(x, y, width, height);\r\n  }\r\n\r\n  getCollisionBounds() {\r\n    return boundingRectangle(this.x, this.y, this.x + this.width, this.y + this.height);\r\n  }\r\n}\r\n","let state = {}\r\n\r\nlet applicationState = {};\r\n\r\nexport default function initialize(props) {\r\n  applicationState = props;\r\n  const { ctx, width, height } = applicationState;\r\n  state = {\r\n    size: 1,\r\n    width,\r\n    height,\r\n    image: ctx.createImageData(width, height),\r\n    keyState: {}\r\n  };\r\n  return {\r\n    name: 'noise',\r\n    resize,\r\n    update,\r\n    render,\r\n    handleKeyDown,\r\n    handleKeyUp\r\n  };\r\n}\r\n\r\nfunction resize() {\r\n  const { ctx, width, height } = applicationState;\r\n  state.width = width;\r\n  state.height = height;\r\n  state.image = ctx.createImageData(width, height);\r\n}\r\n\r\nfunction update() {\r\n  const { size, width, height, keyState } = state;\r\n\r\n  if (keyState['ArrowDown']) {\r\n    if (state.size > 1) {\r\n      state.size--;\r\n    }\r\n  }\r\n\r\n  if (keyState['ArrowUp']) {\r\n    if (state.size < 100) {\r\n      state.size++;\r\n    }\r\n  }\r\n\r\n  const buffer = state.image.data;\r\n\r\n  for (let y = 0; y < height; y += size) {\r\n    for (let x = 0; x < width; x += size) {\r\n      const color = Math.floor(Math.random() * 256);\r\n      for (let dy = y; dy < Math.min(y + size, height); dy++) {\r\n        for (let dx = x; dx < Math.min(x + size, width); dx++) {\r\n          const pos = (dy * width + dx) * 4;\r\n          buffer[pos] = color;\r\n          buffer[pos + 1] = color;\r\n          buffer[pos + 2] = color;\r\n          buffer[pos + 3] = 255;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction render() {\r\n  const { ctx } = applicationState;\r\n  ctx.putImageData(state.image, 0, 0);\r\n}\r\n\r\nfunction handleKeyDown(event) {\r\n  state.keyState[event.code] = true;\r\n}\r\n\r\nfunction handleKeyUp(event) {\r\n  state.keyState[event.code] = false;\r\n}","import React from 'react';\r\nimport Message from './Message';\r\nimport Menu from './Menu';\r\nimport dodge from '../games/dodge';\r\nimport noise from '../games/noise';\r\n\r\nconst games = [dodge, noise];\r\n\r\nlet gameIndex = 0;\r\n\r\nlet gameState = {};\r\n\r\nconst state = {\r\n  totalFrameTime: 0,\r\n  frameCount: 0,\r\n  paused: true\r\n};\r\n\r\nconst sharedState = {\r\n  ctx: null,\r\n  deltaTime: 0,\r\n  width: 0,\r\n  height: 0\r\n};\r\n\r\nfunction App() {\r\n  const canvasRef = React.useRef(null);\r\n  const requestRef = React.useRef(null);\r\n  const previousTimeRef = React.useRef(0);\r\n\r\n  const [, setUpdate] = React.useState(0);\r\n  const [message, setMessage] = React.useState();\r\n  const [title, setTitle] = React.useState();\r\n  const [options, setOptions] = React.useState();\r\n\r\n  function previousScene() {\r\n    gameIndex = (gameIndex + games.length - 1) % games.length;\r\n    gameState = games[gameIndex](sharedState);\r\n    setTitle(gameState.name);\r\n    state.totalFrameTime = 0;\r\n    state.frameCount = 0;\r\n  }\r\n\r\n  function nextScene() {\r\n    gameIndex = (gameIndex + 1) % games.length;\r\n    gameState = games[gameIndex](sharedState);\r\n    setTitle(gameState.name);\r\n    state.totalFrameTime = 0;\r\n    state.frameCount = 0;\r\n  }\r\n\r\n  const onClickMessage = (event) => {\r\n    event.preventDefault();\r\n    if (state.messageTimer) {\r\n      cancelMessage();\r\n    }\r\n  };\r\n\r\n  const showMessage = (message) => {\r\n    setMessage(message);\r\n    state.messageTimer = setTimeout(clearMessage, 10000);\r\n  }\r\n\r\n  const clearMessage = () => {\r\n    setMessage();\r\n    state.messageTimer = undefined;\r\n  }\r\n\r\n  const cancelMessage = React.useCallback(() => {\r\n    clearTimeout(state.messageTimer);\r\n    clearMessage();\r\n  }, []);\r\n\r\n  sharedState.showMessage = showMessage;\r\n  sharedState.setOptions = setOptions;\r\n\r\n  const forceUpdate = React.useCallback(() => { setUpdate(x => x + 1); }, []);\r\n\r\n  const handleKeyDown = React.useCallback((event) => {\r\n    if (event.code === 'PageDown') {\r\n      event.preventDefault();\r\n      nextScene();\r\n    } else if (event.code === 'PageUp') {\r\n      event.preventDefault();\r\n      previousScene();\r\n    } else if (event.code === 'Escape') {\r\n      event.preventDefault();\r\n      state.paused = !state.paused;\r\n      cancelMessage();\r\n      forceUpdate();\r\n    }\r\n    else {\r\n      if (gameState.handleKeyDown) {\r\n        gameState.handleKeyDown(event);\r\n      }\r\n    }\r\n  }, [forceUpdate, cancelMessage]);\r\n\r\n  const handleKeyUp = (event) => {\r\n    if (gameState.handleKeyUp) {\r\n      gameState.handleKeyUp(event);\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const rect = canvas.getBoundingClientRect()\r\n    sharedState.ctx = canvas.getContext('2d');\r\n    sharedState.width = rect.width * window.devicePixelRatio;\r\n    sharedState.height = rect.height * window.devicePixelRatio;\r\n\r\n    gameState = games[gameIndex](sharedState);\r\n    setTitle(gameState.name);\r\n\r\n    const animate = currentTime => {\r\n      if (previousTimeRef.current !== undefined) {\r\n        sharedState.deltaTime = currentTime - previousTimeRef.current;\r\n\r\n        const rect = canvas.getBoundingClientRect();\r\n        canvas.width = rect.width * window.devicePixelRatio;\r\n        canvas.height = rect.height * window.devicePixelRatio;\r\n\r\n        if (canvas.width !== sharedState.width || canvas.height !== sharedState.height) {\r\n          state.totalFrameTime = 0;\r\n          state.frameCount = 0;\r\n          sharedState.width = canvas.width;\r\n          sharedState.height = canvas.height;\r\n\r\n          if (gameState.resize) {\r\n            gameState.resize();\r\n          }\r\n        }\r\n\r\n        const t0 = performance.now();\r\n\r\n        if (gameState.update && !state.paused) {\r\n          gameState.update();\r\n        }\r\n\r\n        if (gameState.render) {\r\n          gameState.render();\r\n        }\r\n\r\n        const t1 = performance.now();\r\n\r\n        state.totalFrameTime += t1 - t0;\r\n        state.frameCount++;\r\n\r\n        drawFrameTime();\r\n      }\r\n\r\n      previousTimeRef.current = currentTime;\r\n      requestRef.current = requestAnimationFrame(animate);\r\n    }\r\n\r\n    window.addEventListener('keydown', handleKeyDown);\r\n    window.addEventListener('keyup', handleKeyUp);\r\n\r\n    requestRef.current = requestAnimationFrame(animate);\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n      window.removeEventListener('keyup', handleKeyUp);\r\n      cancelAnimationFrame(requestRef.current);\r\n    }\r\n  }, [canvasRef, handleKeyDown]);\r\n\r\n  const onChange = (option, value) => {\r\n    if (value !== option.value) {\r\n      gameState.setOption(option, value);\r\n      forceUpdate();\r\n    }\r\n  };\r\n\r\n  const onClickPrevious = (event) => {\r\n    event.preventDefault();\r\n    nextScene();\r\n  };\r\n\r\n  const onClickNext = (event) => {\r\n    event.preventDefault();\r\n    previousScene();\r\n  };\r\n\r\n  return (\r\n    <div className=\"screen\">\r\n      <canvas id=\"canvas\" ref={canvasRef}></canvas>\r\n      <Message message={message} onClick={onClickMessage} />\r\n      <Menu show={state.paused} onClickPrevious={onClickPrevious} onClickNext={onClickNext} onChange={onChange} title={title} options={options} />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction drawFrameTime() {\r\n  const { totalFrameTime, frameCount } = state;\r\n  const { ctx, width } = sharedState;\r\n  const text = gameState.name + ' (' + (totalFrameTime / frameCount).toFixed(2) + ' ms)';\r\n  ctx.fillStyle = 'white';\r\n  ctx.font = '20px monospace';\r\n  ctx.textAlign = 'center';\r\n  ctx.textBaseline = 'top';\r\n  ctx.shadowOffsetX = 1;\r\n  ctx.shadowOffsetY = 1;\r\n  ctx.shadowColor = 'rgba(0.2,0.2,0.2,1.0)';\r\n  ctx.shadowBlur = 4;\r\n  ctx.fillText(text, width / 2, 0);\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}