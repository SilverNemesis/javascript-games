{"version":3,"sources":["sounds/thrust.wav","sounds/fire.wav","sounds/beat1.wav","sounds/beat2.wav","sounds/bangLarge.wav","sounds/bangMedium.wav","sounds/bangSmall.wav","games/asteroids.js","components/Message.js","components/Menu.js","lib/collision.js","games/dodge.js","games/noise.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","state","Message","message","onClick","id","map","text","index","key","DescriptionControl","props","control","className","description","SelectControl","options","i","length","push","value","htmlFor","name","onChange","event","target","BoolControl","type","checked","IntControl","min","max","FloatControl","toFixed","Math","floor","FunctionControl","function","Menu","controls","show","onClickPrevious","onClickNext","title","option","boundingRectangle","x1","y1","x2","y2","boundingCircle","cx","cy","radius","collide","pri","sec","rect1","rect2","collideRectangles","collideCircleRectangle","Error","cir1","cir2","dx","dy","distance","sr","collideCircles","cir","rect","testX","testY","distX","distY","applicationState","screen","width","height","sounds","thrust","loadSound","fire","beat1","beat2","bangLarge","bangMedium","bangSmall","adjustScale","scale","x","y","keyMap","reset","player","score","bullets","asteroids","level","gameState","waitTime","keyState","generateAsteroids","setTimeout","ambientSound","start","handleExit","stop","Asteroid","getRandomNumber","resize","update","deltaTime","filter","active","splice","playerBounds","getCollisionBounds","playerHit","asteroid","asteroidHit","bounds","k","j","playSound","stopSoundLoop","render","ctx","clearRect","fillStyle","fillRect","save","clip","font","textAlign","textBaseline","fillText","padStart","restore","renderWrap","locations","getLocations","xos","yos","handleKeyDown","code","handleKeyUp","handlePause","isPaused","random","angleToPoint","angle","cos","PI","sin","count","samples","Audio","sound","play","startSoundLoop","delay","timeout","continueSoundLoop","bind","this","clearInterval","undefined","AmbientSound","maxDelay","updateDelay","isPlaying","playNextSound","clearTimeout","Player","rotation","fireDelay","thrusting","delta","Bullet","accelerationVector","_render","translate","rotate","strokeStyle","lineWidth","beginPath","moveTo","lineTo","closePath","stroke","dir","speed","points","offset","time","arc","offsetX","offsetY","obstacles","gameOver","frameCount","h","gap","w","ObstacleComponent","onScreen","showMessage","setOptions","TextComponent","color","fontName","fontSize","PlayerComponent","speedX","speedY","fill","image","createImageData","size","buffer","data","pos","putImageData","games","gameIndex","totalFrameTime","paused","showFrameTime","sharedState","App","canvasRef","React","useRef","requestRef","previousTimeRef","useState","setUpdate","setMessage","setTitle","previousScene","nextScene","clearMessage","messageTimer","cancelMessage","useCallback","pause","unpause","forceUpdate","preventDefault","useEffect","canvas","current","getBoundingClientRect","getContext","window","devicePixelRatio","addEventListener","requestAnimationFrame","animate","currentTime","t0","performance","now","t1","shadowOffsetX","shadowOffsetY","shadowColor","shadowBlur","drawFrameTime","removeEventListener","cancelAnimationFrame","ref","setOption","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"iHAAAA,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,+FCSvCC,E,+CCIWC,EAXC,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,QAC1B,OAAKD,EAIH,yBAAKE,GAAG,UAAUD,QAASA,GACxBD,EAAQG,KAAI,SAACC,EAAMC,GAAP,OAAkB,yBAAKC,IAAKD,GAAQD,OAJ5C,MCFLG,EAAqB,SAACC,GAAW,IAC7BC,EAAYD,EAAZC,QACR,OACE,yBAAKC,UAAU,WACZD,EAAQE,cAKTC,EAAgB,SAACJ,GAMrB,IAN+B,IAIvBC,EAAYD,EAAZC,QACFI,EAAU,GACPC,EAAI,EAAGA,EAAIL,EAAQI,QAAQE,OAAQD,IAC1CD,EAAQG,KACL,4BAAQV,IAAKQ,EAAGG,MAAOH,GAAIL,EAAQI,QAAQC,KAGhD,OACE,yBAAKJ,UAAU,WACb,2BAAOQ,QAAST,EAAQU,MAAOV,EAAQU,MACvC,4BAAQjB,GAAIO,EAAQU,KAAMT,UAAU,aAAaO,MAAOR,EAAQQ,MAAOG,SAb3E,SAAkBC,GAChBb,EAAMY,SAASX,EAASY,EAAMC,OAAOL,SAahCJ,KAMHU,EAAc,SAACf,GAAU,IAIrBC,EAAYD,EAAZC,QACR,OACE,yBAAKC,UAAU,WACb,2BAAOA,UAAU,YAAYQ,QAAST,EAAQU,MAAM,2BAAOT,UAAU,YAAYR,GAAIO,EAAQU,KAAMK,KAAK,WAAWC,QAAShB,EAAQQ,MAAOG,SAN/I,SAAkBC,GAChBb,EAAMY,SAASX,EAASY,EAAMC,OAAOG,YAK+HhB,EAAQU,QAK1KO,EAAa,SAAClB,GAAU,IAIpBC,EAAYD,EAAZC,QACR,OACE,yBAAKC,UAAU,WACb,2BAAOQ,QAAST,EAAQU,MAAOV,EAAQU,KAAvC,IAA8CV,EAAQQ,OACtD,2BAAOf,GAAIO,EAAQU,KAAMT,UAAU,YAAYc,KAAK,QAAQG,IAAKlB,EAAQkB,IAAKC,IAAKnB,EAAQmB,IAAKX,MAAOR,EAAQQ,MAAOG,SAP1H,SAAkBC,GAChBb,EAAMY,SAASX,EAASY,EAAMC,OAAOL,YAWnCY,EAAe,SAACrB,GAAU,IAKtBC,EAAYD,EAAZC,QACR,OACE,yBAAKC,UAAU,WACb,2BAAOQ,QAAST,EAAQU,MAAOV,EAAQU,KAAvC,IAA8CV,EAAQQ,MAAMa,QAAQ,IACpE,2BAAO5B,GAAIO,EAAQU,KAAMT,UAAU,YAAYc,KAAK,QAAQG,IAAKI,KAAKC,MAR3D,IAQiEvB,EAAQkB,KAAeC,IAAKG,KAAKC,MARlG,IAQwGvB,EAAQmB,KAAeX,MAAOc,KAAKC,MAR3I,IAQiJvB,EAAQQ,OAAiBG,SAPzL,SAAkBC,GAChBb,EAAMY,SAASX,EAASY,EAAMC,OAAOL,MAFxB,UAaXgB,EAAkB,SAACzB,GAAU,IAIzBC,EAAYD,EAAZC,QACR,OACE,yBAAKC,UAAU,WACb,4BAAQT,QANZ,SAAiBoB,GACfZ,EAAQyB,aAKqBzB,EAAQU,QAgD1BgB,EA3CF,SAAC,GAAsE,IAI9EC,EAJUC,EAAmE,EAAnEA,KAAMC,EAA6D,EAA7DA,gBAAiBC,EAA4C,EAA5CA,YAAanB,EAA+B,EAA/BA,SAAUoB,EAAqB,EAArBA,MAAO3B,EAAc,EAAdA,QACnE,OAAKwB,GAIDxB,IACFuB,EAAWvB,EAAQV,KAAI,SAACsC,EAAQpC,GAC9B,OAAQoC,EAAOjB,MACb,IAAK,cACH,OAAO,kBAAC,EAAD,CAAoBlB,IAAKD,EAAOI,QAASgC,IAClD,IAAK,SACH,OAAO,kBAAC,EAAD,CAAenC,IAAKD,EAAOI,QAASgC,EAAQrB,SAAUA,IAC/D,IAAK,OACH,OAAO,kBAAC,EAAD,CAAad,IAAKD,EAAOI,QAASgC,EAAQrB,SAAUA,IAC7D,IAAK,MACH,OAAO,kBAAC,EAAD,CAAYd,IAAKD,EAAOI,QAASgC,EAAQrB,SAAUA,IAC5D,IAAK,QACH,OAAO,kBAAC,EAAD,CAAcd,IAAKD,EAAOI,QAASgC,EAAQrB,SAAUA,IAC9D,IAAK,WACH,OAAO,kBAAC,EAAD,CAAiBd,IAAKD,EAAOI,QAASgC,IAC/C,QACE,OACE,yBAAKnC,IAAKD,EAAOK,UAAU,WAAW+B,EAAOjB,KAA7C,0BAMR,yBAAKtB,GAAG,kBACN,yBAAKA,GAAG,QACN,yBAAKQ,UAAU,eACb,0BAAMA,UAAU,OAAOT,QAASqC,GAAhC,eACCE,EACD,0BAAM9B,UAAU,QAAQT,QAASsC,GAAjC,gBAEF,6BACGH,MAlCA,M,iIClFJ,SAASM,EAAkBC,EAAIC,EAAIC,EAAIC,GAC5C,MAAO,CACLtB,KALc,EAMdmB,KACAC,KACAC,KACAC,MAIG,SAASC,EAAeC,EAAIC,EAAIC,GACrC,MAAO,CACL1B,KAdW,EAeXwB,KACAC,KACAC,UAIG,SAASC,EAAQC,EAAKC,GAC3B,OAAQD,EAAI5B,MACV,KAxBc,EAyBZ,OAAQ6B,EAAI7B,MACV,KA1BU,EA2BR,OAoBV,SAA2B8B,EAAOC,GAChC,GAAID,EAAMT,IAAMU,EAAMZ,IAAMW,EAAMX,IAAMY,EAAMV,IAAMS,EAAMR,IAAMS,EAAMX,IAAMU,EAAMV,IAAMW,EAAMT,GAC5F,OAAO,EAET,OAAO,EAxBQU,CAAkBJ,EAAKC,GAChC,KA3BO,EA4BL,OAAOI,EAAuBJ,EAAKD,GACrC,QACE,MAAM,IAAIM,MAAM,kBAAoBN,EAAI5B,KAAO,IAAM6B,EAAI7B,MAE/D,KAhCW,EAiCT,OAAQ6B,EAAI7B,MACV,KAnCU,EAoCR,OAAOiC,EAAuBL,EAAKC,GACrC,KApCO,EAqCL,OAgBV,SAAwBM,EAAMC,GAC5B,IAAMC,EAAKF,EAAKX,GAAKY,EAAKZ,GACpBc,EAAKH,EAAKV,GAAKW,EAAKX,GACpBc,EAAWF,EAAKA,EAAKC,EAAKA,EAC1BE,EAAKL,EAAKT,OAASU,EAAKV,OAC9B,GAAIa,EAAWC,EAAKA,EAClB,OAAO,EAET,OAAO,EAxBQC,CAAeb,EAAKC,GAC7B,QACE,MAAM,IAAIK,MAAM,kBAAoBN,EAAI5B,KAAO,IAAM6B,EAAI7B,MAE/D,QACE,MAAM,IAAIkC,MAAM,kBAAoBN,EAAI5B,KAAO,IAAM6B,EAAI7B,OAsB/D,SAASiC,EAAuBS,EAAKC,GACnC,IAAI3C,EAAO,EACP4C,EAAQF,EAAIlB,GACZqB,EAAQH,EAAIjB,GACZiB,EAAIlB,GAAKmB,EAAKxB,IAChBnB,GAAQ,EACR4C,EAAQD,EAAKxB,IACJuB,EAAIlB,GAAKmB,EAAKtB,KACvBrB,GAAQ,EACR4C,EAAQD,EAAKtB,IAEXqB,EAAIjB,GAAKkB,EAAKvB,IAChBpB,GAAQ,EACR6C,EAAQF,EAAKvB,IACJsB,EAAIjB,GAAKkB,EAAKrB,KACvBtB,GAAQ,EACR6C,EAAQF,EAAKrB,IAEf,IAAMwB,EAAQJ,EAAIlB,GAAKoB,EACjBG,EAAQL,EAAIjB,GAAKoB,EAEvB,OADkBC,EAAQA,EAAUC,EAAQA,GAC5BL,EAAIhB,OAASgB,EAAIhB,OACxB1B,EAEF,EH9ET,IAKIgD,EAAmB,GAEjBC,EAAS,CACbC,MAAO,KACPC,OAAQ,MAYJC,EAAS,CACbC,OAAQC,GAAUD,IAAQ,IAC1BE,KAAMD,GAAUC,IAAM,IACtBC,MAAOF,GAAUE,IAAO,GACxBC,MAAOH,GAAUG,IAAO,GACxBC,UAAWJ,GAAUI,IAAW,IAChCC,WAAYL,GAAUK,IAAY,IAClCC,UAAWN,GAAUM,IAAW,KAGlC,SAASC,EAAYX,EAAOC,GAC1B7E,EAAM4E,MAAQA,EACd5E,EAAM6E,OAASA,EACfF,EAAOa,MAAQvD,KAAKJ,IAAI+C,EAAQD,EAAOC,MAAOC,EAASF,EAAOE,QAC9DF,EAAOc,GAAKb,EAAQD,EAAOC,MAAQD,EAAOa,OAAS,EACnDb,EAAOe,GAAKb,EAASF,EAAOE,OAASF,EAAOa,OAAS,EAGvD,IAAMG,EACE,OADFA,EAEG,OAFHA,EAGI,OAHJA,EAIE,QA+BR,SAASC,IACP5F,EAAM6F,OAAOD,QACb5F,EAAM8F,MAAQ,EACd9F,EAAM+F,QAAU,GAChB/F,EAAMgG,UAAY,GAClBhG,EAAMiG,MAAQ,EACdjG,EAAMkG,UAhFmB,EAiFzBlG,EAAMmG,SAAW,EACjBnG,EAAMoG,SAAW,GACjBC,IACAC,WAAWtG,EAAMuG,aAAaC,MAAO,KAGvC,SAASC,IACPzG,EAAMuG,aAAaG,OAGrB,SAASL,IACP,IAAK,IAAIrF,EAAI,EAAGA,EAAI,EAAkB,EAAdhB,EAAMiG,MAAWjF,IACvChB,EAAMgG,UAAU9E,KAAK,IAAIyF,GAASC,GAAgB,EAAGjC,EAAOC,OAAQgC,GAAgB,EAAGjC,EAAOE,QAAS+B,GAAgB,EAAG,KA5E1G,GA4E6HA,GAAgB,EAAG,KAIpK,SAASC,IAAU,IAAD,EACUnC,EAC1Ba,EAFgB,EACRX,MADQ,EACDC,QAIjB,SAASiC,IApGiB,IAqGpB9G,EAAMkG,YACRlG,EAAMkG,UAvGiB,OA0GrBlG,EAAMkG,UACRlG,EAAM6F,OAAOiB,SA5GU,IA6Gd9G,EAAMkG,WACXlG,EAAMoG,SAAST,IAAgB3F,EAAMoG,SAAST,IAAiB3F,EAAMoG,SAAST,IAAkB3F,EAAMoG,SAAST,MACjH3F,EAAMkG,UA9Ge,GAEC,IA8GflG,EAAMkG,YACflG,EAAMmG,UAAYzB,EAAiBqC,UAC/B/G,EAAMmG,SAAW,GACnBP,KAIJ5F,EAAM+F,QAAU/F,EAAM+F,QAAQiB,QAAO,SAAAvB,GAAC,OAAIA,EAAEwB,UAExCjH,EAAM+F,QAAQ9E,OA3GD,GA4GfjB,EAAM+F,QAAQmB,OAAO,EAAGlH,EAAM+F,QAAQ9E,OA5GvB,GA+GjB,IAAK,IAAID,EAAI,EAAGA,EAAIhB,EAAM+F,QAAQ9E,OAAQD,IACxChB,EAAM+F,QAAQ/E,GAAG8F,SAGnB9G,EAAMgG,UAAYhG,EAAMgG,UAAUgB,QAAO,SAAAvB,GAAC,OAAIA,EAAEwB,UAEhD,IAAK,IAAIjG,EAAI,EAAGA,EAAIhB,EAAMgG,UAAU/E,OAAQD,IAC1ChB,EAAMgG,UAAUhF,GAAG8F,SAOrB,IAJA,IAAMK,EAAenH,EAAM6F,OAAOuB,qBAE9BC,GAAY,EAEPrG,EAAI,EAAGA,EAAIhB,EAAMgG,UAAU/E,OAAQD,IAAK,CAI/C,IAHA,IAAMsG,EAAWtH,EAAMgG,UAAUhF,GAC7BuG,GAAc,EACZC,EAASF,EAASF,qBACfK,EAAI,EAAGA,EAAID,EAAOvG,OAAQwG,IACjC,IAAK,IAAIC,EAAI,EAAGA,EAAI1H,EAAM+F,QAAQ9E,OAAQyG,IACpCrE,EAAQmE,EAAOC,GAAIzH,EAAM+F,QAAQ2B,GAAGN,wBACtCpH,EAAM+F,QAAQ2B,GAAGT,QAAS,EAC1BM,GAAc,GAKpB,IAAKA,GAxJkB,IAwJHvH,EAAMkG,UACxB,IAAK,IAAIuB,EAAI,EAAGA,EAAID,EAAOvG,OAAQwG,IACjC,IAAK,IAAIC,EAAI,EAAGA,EAAIP,EAAalG,OAAQyG,IACnCrE,EAAQmE,EAAOC,GAAIN,EAAaO,MAClCL,GAAY,EACZE,GAAc,GAMlBA,IACFD,EAASL,QAAS,EApJJ,KAqJVK,EAASlE,QACXpD,EAAM8F,OAAS,GACf6B,GAAU7C,EAAOM,WACjBpF,EAAMgG,UAAU9E,KAAK,IAAIyF,GAASW,EAAS7B,EAAI,GAAI6B,EAAS5B,EAAI,GAAIkB,GAAgB,EAAG,KAvJxE,GAuJ8FA,GAAgB,EAAG,KAChI5G,EAAMgG,UAAU9E,KAAK,IAAIyF,GAASW,EAAS7B,EAAI,GAAI6B,EAAS5B,EAAI,GAAIkB,GAAgB,EAAG,KAxJxE,GAwJ8FA,GAAgB,EAAG,MAxJjH,KAyJNU,EAASlE,QAClBpD,EAAM8F,OAAS,GACf6B,GAAU7C,EAAOO,YACjBrF,EAAMgG,UAAU9E,KAAK,IAAIyF,GAASW,EAAS7B,EAAI,EAAG6B,EAAS5B,EAAI,EAAGkB,GAAgB,EAAG,KA3JvE,GA2J4FA,GAAgB,EAAG,KAC7H5G,EAAMgG,UAAU9E,KAAK,IAAIyF,GAASW,EAAS7B,EAAI,EAAG6B,EAAS5B,EAAI,EAAGkB,GAAgB,EAAG,KA5JvE,GA4J4FA,GAAgB,EAAG,OAE7H5G,EAAM8F,OAAS,IACf6B,GAAU7C,EAAOQ,aAKnB+B,IACFO,GAAc9C,EAAOC,QACrB/E,EAAMuG,aAAaG,OACnB1G,EAAMkG,UAvLkB,EAwLxBlG,EAAMmG,SAAW,KAGY,IAA3BnG,EAAMgG,UAAU/E,SAClBjB,EAAMuG,aAAaG,OACnB1G,EAAMiG,QACNI,IACAC,WAAWtG,EAAMuG,aAAaC,MAAO,OAIzC,SAASqB,IAAU,IAAD,EACenD,EAAvBoD,EADQ,EACRA,IAAKlD,EADG,EACHA,MAAOC,EADJ,EACIA,OAEpBiD,EAAIC,UAAU,EAAG,EAAGnD,EAAOC,GAE3BiD,EAAIE,UAAY,OAChBF,EAAIG,SAAStD,EAAOc,EAAGd,EAAOe,EAAGf,EAAOC,MAAQD,EAAOa,MAAOb,EAAOE,OAASF,EAAOa,OAErFsC,EAAII,OACJJ,EAAIzD,KAAKM,EAAOc,EAAGd,EAAOe,EAAGf,EAAOC,MAAQD,EAAOa,MAAOb,EAAOE,OAASF,EAAOa,OACjFsC,EAAIK,OA/MqB,IAiNrBnI,EAAMkG,WAhNc,IAgNsBlG,EAAMkG,WAClDlG,EAAM6F,OAAOgC,SAGf,IAAK,IAAI7G,EAAI,EAAGA,EAAIhB,EAAM+F,QAAQ9E,OAAQD,IACxChB,EAAM+F,QAAQ/E,GAAG6G,SAGnB,IAAK,IAAI7G,EAAI,EAAGA,EAAIhB,EAAMgG,UAAU/E,OAAQD,IAC1ChB,EAAMgG,UAAUhF,GAAG6G,SAInBC,EAAIM,KAAO,QAAyB,GAAfzD,EAAOa,OAAYxD,QAAQ,GAAK,gBACrD8F,EAAIE,UAAY,QAChBF,EAAIO,UAAY,MAChBP,EAAIQ,aAAe,SACnB,IAAM7C,EAAId,EAAOc,EAAId,EAAOC,MAAQD,EAAOa,MAAQ,EAC7CE,EAAIf,EAAOe,EAAIf,EAAOC,MAAQD,EAAOa,MAAQ,GACnDsC,EAAIS,SAASvI,EAAM8F,MAAM9D,QAAQ,GAAGwG,SAAS,GAAI/C,EAAGC,GAIpDoC,EAAIM,KAAO,QAAyB,GAAfzD,EAAOa,OAAYxD,QAAQ,GAAK,gBACrD8F,EAAIE,UAAY,QAChBF,EAAIO,UAAY,SAChBP,EAAIQ,aAAe,SACnB,IAAM7C,EAAId,EAAOc,EAAId,EAAOC,MAAQD,EAAOa,MAAQ,EAC7CE,EAAIf,EAAOe,EAAIf,EAAOC,MAAQD,EAAOa,MAAQ,GAIrD,GAHEsC,EAAIS,SAASvI,EAAMiG,MAAMjE,QAAQ,GAAGwG,SAAS,EAAG,KAAM/C,EAAGC,GA/OlC,IAkPrB1F,EAAMkG,UAAkC,CAC1C4B,EAAIM,KAAO,QAAyB,GAAfzD,EAAOa,OAAYxD,QAAQ,GAAK,gBACrD8F,EAAIE,UAAY,QAChBF,EAAIO,UAAY,SAChBP,EAAIQ,aAAe,SACnB,IAAM7C,EAAId,EAAOc,EAAId,EAAOC,MAAQD,EAAOa,MAAQ,EAC7CE,EAAIf,EAAOe,EAAIf,EAAOE,OAASF,EAAOa,MAAQ,EACpDsC,EAAIS,SAAS,6BAA8B9C,EAAGC,QACzC,GAvPmB,IAuPf1F,EAAMkG,UAAmC,CAClD4B,EAAIM,KAAO,QAAyB,IAAfzD,EAAOa,OAAaxD,QAAQ,GAAK,gBACtD8F,EAAIE,UAAY,QAChBF,EAAIO,UAAY,SAChBP,EAAIQ,aAAe,SACnB,IAAM7C,EAAId,EAAOc,EAAId,EAAOC,MAAQD,EAAOa,MAAQ,EAC7CE,EAAIf,EAAOe,EAAIf,EAAOE,OAASF,EAAOa,MAAQ,EACpDsC,EAAIS,SAAS,YAAa9C,EAAGC,GAG/BoC,EAAIW,UAGN,SAASC,EAAWZ,EAAKrC,EAAGC,EAAGtC,EAAQyE,EAAQnH,GAG7C,IAFA,IAAMiI,EAAYC,EAAanD,EAAGC,EAAGtC,GAE5BsE,EAAI,EAAGA,EAAIiB,EAAUjD,EAAEzE,OAAQyG,IACtC,IAAK,IAAI1G,EAAI,EAAGA,EAAI2H,EAAUlD,EAAExE,OAAQD,IACtC6G,EAAOC,EAAKrC,EAAIkD,EAAUlD,EAAEzE,GAAI0E,EAAIiD,EAAUjD,EAAEgC,GAAIhH,GAK1D,SAASkI,EAAanD,EAAGC,EAAGtC,GAC1B,IAAMyF,EAAM,CAAC,GAETpD,EAAIrC,GACNyF,EAAI3H,KAAKyD,EAAOC,OAGda,EAAId,EAAOC,MAAQxB,GACrByF,EAAI3H,MAAMyD,EAAOC,OAGnB,IAAMkE,EAAM,CAAC,GAUb,OARIpD,EAAItC,GACN0F,EAAI5H,KAAKyD,EAAOE,QAGda,EAAIf,EAAOE,OAASzB,GACtB0F,EAAI5H,MAAMyD,EAAOE,QAGZ,CACLY,EAAGoD,EACHnD,EAAGoD,GAIP,SAASC,EAAcxH,GACrBvB,EAAMoG,SAAS7E,EAAMyH,OAAQ,EAG/B,SAASC,GAAY1H,GACnBvB,EAAMoG,SAAS7E,EAAMyH,OAAQ,EAG/B,SAASE,GAAYC,GAnTM,IAoTrBnJ,EAAMkG,UACJiD,IACFnJ,EAAMkG,UArTc,OAuTblG,EAAMkG,YACViD,IACHnJ,EAAMkG,UA1Te,IA+T3B,SAASU,GAAgB/E,EAAKC,GAC5B,OAAOG,KAAKC,MAAMD,KAAKmH,UAAYtH,EAAMD,EAAM,GAAKA,GAGtD,SAASwH,GAAaC,EAAOlG,GAC3B,MAAO,CACLqC,EAAGxD,KAAKsH,KAAKD,EAAQ,KAAOrH,KAAKuH,GAAK,MAAQpG,EAC9CsC,EAAGzD,KAAKwH,KAAKH,EAAQ,KAAOrH,KAAKuH,GAAK,MAAQpG,GAIlD,SAAS4B,GAAU3D,EAAMqI,GAEvB,IADA,IAAMC,EAAU,GACP3I,EAAI,EAAGA,EAAI0I,EAAO1I,IACzB2I,EAAQzI,KAAK,IAAI0I,MAAMvI,IAEzB,MAAO,CACLd,MAAO,EACPoJ,WAIJ,SAAShC,GAAUkC,GACjBA,EAAMF,QAAQE,EAAMtJ,OAAOuJ,OAC3BD,EAAMtJ,OAASsJ,EAAMtJ,MAAQ,GAAKsJ,EAAMF,QAAQ1I,OAGlD,SAAS8I,GAAeF,EAAOG,GACxBH,EAAMI,UACTJ,EAAMG,MAAQA,EACdH,EAAMK,kBAAoBA,GAAkBC,KAAKN,GACjDA,EAAMK,qBAIV,SAASA,KACPvC,GAAUyC,MACVA,KAAKH,QAAU3D,WAAW8D,KAAKF,kBAAmBE,KAAKJ,OAGzD,SAASpC,GAAciC,GACjBA,EAAMI,UACRI,cAAcR,EAAMI,SACpBJ,EAAMI,aAAUK,G,IAIdC,G,WACJ,WAAYzF,EAAQ0F,EAAUC,GAAc,oBAC1CL,KAAKtF,OAASA,EACdsF,KAAKI,SAAWA,EAChBJ,KAAKK,YAAcA,EACnBL,KAAKM,WAAY,EACjBN,KAAK5D,MAAQ4D,KAAK5D,MAAM2D,KAAKC,MAC7BA,KAAK1D,KAAO0D,KAAK1D,KAAKyD,KAAKC,MAC3BA,KAAKO,cAAgBP,KAAKO,cAAcR,KAAKC,M,oDAI7CA,KAAKM,WAAY,EACjBN,KAAKV,MAAQ,EACbU,KAAK7J,MAAQ,EACb6J,KAAKJ,MAAQI,KAAKI,SAClBJ,KAAKO,kB,6BAILP,KAAKM,WAAY,EACjBE,aAAaR,KAAKH,W,sCAIlB,GAAKG,KAAKM,UAAV,CADc,IAINV,EAAiBI,KAAjBJ,MAAOzJ,EAAU6J,KAAV7J,MA1YQ,IA2YnBP,EAAMkG,YACRkE,KAAKV,QACLU,KAAKJ,MAAQI,KAAKK,YAAYL,KAAKV,MAAOU,KAAKJ,OAC3CI,KAAKJ,QAAUA,IACjBI,KAAKV,MAAQ,GAEfU,KAAK7J,OAAS6J,KAAK7J,MAAQ,GAAK6J,KAAKtF,OAAO7D,OAC5C0G,GAAUyC,KAAKtF,OAAOvE,KAExBqK,aAAaR,KAAKH,SAClBG,KAAKH,QAAU3D,WAAW8D,KAAKO,cAAeX,Q,KAI5Ca,G,WACJ,aAAe,oBACbT,KAAKxE,Q,oDAILwE,KAAK3E,EAAId,EAAOC,MAAQ,EACxBwF,KAAK1E,EAAIf,EAAOE,OAAS,EACzBuF,KAAKrG,GAAK,EACVqG,KAAKpG,GAAK,EACVoG,KAAKU,SAAW,EAChBV,KAAKW,UAAY,EACjBX,KAAKY,WAAY,I,+BAIjBZ,KAAKW,WAAarG,EAAiBqC,UAE/BqD,KAAKW,UAAY,IACnBX,KAAKW,UAAY,GAGnB,IAAME,EAAQvG,EAAiBqC,UAAY,GAEvC/G,EAAMoG,SAAST,GACjByE,KAAKU,UAAoB,EAARG,EACRjL,EAAMoG,SAAST,KACxByE,KAAKU,UAAoB,EAARG,GAGnB,IAAMlH,EAAK9B,KAAKsH,KAAKa,KAAKU,SAAW,KAAO7I,KAAKuH,GAAK,MAChDxF,EAAK/B,KAAKwH,KAAKW,KAAKU,SAAW,KAAO7I,KAAKuH,GAAK,MAElDxJ,EAAMoG,SAAST,IAAmC,IAAnByE,KAAKW,YACtCpD,GAAU7C,EAAOG,MACjBjF,EAAM+F,QAAQ7E,KAAK,IAAIgK,GAAOd,KAAK3E,EAAS,EAAL1B,EAAUqG,KAAK1E,EAAS,EAAL1B,EAAe,GAALD,EAAgB,GAALC,IAC/EoG,KAAKW,UAhbM,KAmbb,IAAMI,EACO,GAARF,EAAclH,EADboH,EAEO,GAARF,EAAcjH,EAGfhE,EAAMoG,SAAST,IACjByE,KAAKY,WAAY,EACjBjB,GAAejF,EAAOC,OAAQ,KAC9BqF,KAAKrG,IAAMoH,EACXf,KAAKpG,IAAMmH,IAEXvD,GAAc9C,EAAOC,QACrBqF,KAAKY,WAAY,EACbZ,KAAKrG,KAAO,IACdqG,KAAKrG,IAAM,IACFqG,KAAKrG,IAAM,MACpBqG,KAAKrG,IAAM,KAETqG,KAAKpG,KAAO,IACdoG,KAAKpG,IAAM,IACFoG,KAAKpG,IAAM,MACpBoG,KAAKpG,IAAM,MAIXoG,KAAKrG,GA9cI,EA+cXqG,KAAKrG,GA/cM,EAgdFqG,KAAKrG,IAhdH,IAidXqG,KAAKrG,IAjdM,GAodTqG,KAAKpG,GApdI,EAqdXoG,KAAKpG,GArdM,EAsdFoG,KAAKpG,IAtdH,IAudXoG,KAAKpG,IAvdM,GA6ZN,IA6DCY,EAAkBD,EAAlBC,MAAOC,EAAWF,EAAXE,OAEfuF,KAAK3E,GAAK2E,KAAKrG,GACfqG,KAAK1E,GAAK0E,KAAKpG,GAEXoG,KAAK3E,EAAIb,EACXwF,KAAK3E,GAAKb,EACDwF,KAAK3E,EAAI,IAClB2E,KAAK3E,GAAKb,GAGRwF,KAAK1E,EAAIb,EACXuF,KAAK1E,GAAKb,EACDuF,KAAK1E,EAAI,IAClB0E,KAAK1E,GAAKb,K,+BAKZ6D,EAAWhE,EAAiBoD,IAAKsC,KAAK3E,EAAG2E,KAAK1E,EAAG,GAAI0E,KAAKgB,QAAS,CAAEN,SAAUV,KAAKU,SAAUE,UAAWZ,KAAKY,c,2CAQ9G,IAJA,IAAMvF,EAAI2E,KAAK3E,EAAI,GACbC,EAAI0E,KAAK1E,EAAI,GACbiD,EAAYC,EAAawB,KAAK3E,EAAG2E,KAAK1E,EAAG0E,KAAKhH,QAC9CoE,EAAS,GACNE,EAAI,EAAGA,EAAIiB,EAAUjD,EAAEzE,OAAQyG,IACtC,IAAK,IAAI1G,EAAI,EAAGA,EAAI2H,EAAUlD,EAAExE,OAAQD,IACtCwG,EAAOtG,KAAK0B,EAAkB6C,EAAGC,EAAGD,EAAI,GAAIC,EAAI,KAGpD,OAAO8B,I,8BAGDM,EAAKrC,EAAGC,EAAGhF,GAAQ,IACjBoK,EAAwBpK,EAAxBoK,SAAUE,EAActK,EAAdsK,UAElBlD,EAAII,OACJJ,EAAIuD,UAAU1G,EAAOc,EAAIA,EAAId,EAAOa,MAAOb,EAAOe,EAAIA,EAAIf,EAAOa,OACjEsC,EAAIwD,OAAQrJ,KAAKuH,GAAK,IAAOsB,GAC7BhD,EAAItC,MAAMb,EAAOa,MAAOb,EAAOa,OAC/BsC,EAAIyD,YAAc,QAClBzD,EAAI0D,UAAY,EAChB1D,EAAI2D,YACJ3D,EAAI4D,OAAO,EAAG,GACd5D,EAAI6D,OAAO,GAAI,IACf7D,EAAI6D,OAAO,GAAI,IACf7D,EAAI6D,QAAQ,GAAI,IAChB7D,EAAI6D,OAAO,EAAG,GACd7D,EAAI8D,YACJ9D,EAAI+D,SACAb,IACFlD,EAAI4D,OAAO,EAAG,IACd5D,EAAI6D,OAAO,EAAG,IACd7D,EAAI6D,QAAQ,EAAG,IACf7D,EAAI8D,YACJ9D,EAAI+D,UAEN/D,EAAIW,c,KAIF9B,G,WACJ,WAAYlB,EAAGC,EAAGoG,EAAK1I,EAAQ2I,GAAQ,oBACrC3B,KAAK3E,EAAIA,EACT2E,KAAK1E,EAAIA,EACT0E,KAAKrG,GAAK9B,KAAKsH,KAAKuC,EAAM,KAAO7J,KAAKuH,GAAK,MAC3CY,KAAKpG,GAAK/B,KAAKwH,KAAKqC,EAAM,KAAO7J,KAAKuH,GAAK,MAC3CY,KAAKhH,OAASA,EACdgH,KAAK2B,MAAQA,EACb3B,KAAK4B,OAAS,GACd,IAAK,IAAIhL,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAC3B,IAAMiL,EAASrF,GAAgB,EAAGxD,EAAS,GAAKA,EAAS,EACzDgH,KAAK4B,OAAO9K,KAAKmI,GAAiB,GAAJrI,EAAQoC,EAAS6I,IAEjD7B,KAAKnD,QAAS,E,qDAId,IAAMgE,EAAQvG,EAAiBqC,UAAY,GAEnCnC,EAAkBD,EAAlBC,MAAOC,EAAWF,EAAXE,OAEfuF,KAAK3E,GAAKwF,EAAQb,KAAK2B,MAAQ3B,KAAKrG,GACpCqG,KAAK1E,GAAKuF,EAAQb,KAAK2B,MAAQ3B,KAAKpG,GAEhCoG,KAAK3E,EAAIb,EACXwF,KAAK3E,GAAKb,EACDwF,KAAK3E,EAAI,IAClB2E,KAAK3E,GAAKb,GAGRwF,KAAK1E,EAAIb,EACXuF,KAAK1E,GAAKb,EACDuF,KAAK1E,EAAI,IAClB0E,KAAK1E,GAAKb,K,+BAKZ6D,EAAWhE,EAAiBoD,IAAKsC,KAAK3E,EAAG2E,KAAK1E,EAAG0E,KAAKhH,OAAQgH,KAAKgB,QAAS,CAAEY,OAAQ5B,KAAK4B,OAAQ5I,OAAQgH,KAAKhH,W,2CAMhH,IAFA,IAAMuF,EAAYC,EAAawB,KAAK3E,EAAG2E,KAAK1E,EAAG0E,KAAKhH,QAC9CoE,EAAS,GACNE,EAAI,EAAGA,EAAIiB,EAAUjD,EAAEzE,OAAQyG,IACtC,IAAK,IAAI1G,EAAI,EAAGA,EAAI2H,EAAUlD,EAAExE,OAAQD,IACtCwG,EAAOtG,KAAK+B,EAAemH,KAAK3E,EAAIkD,EAAUlD,EAAEzE,GAAIoJ,KAAK1E,EAAIiD,EAAUjD,EAAEgC,GAAI0C,KAAKhH,SAGtF,OAAOoE,I,8BAGDM,EAAKrC,EAAGC,EAAGhF,GACjBoH,EAAII,OACJJ,EAAIuD,UAAU1G,EAAOc,EAAIA,EAAId,EAAOa,MAAOb,EAAOe,EAAIA,EAAIf,EAAOa,OACjEsC,EAAItC,MAAMb,EAAOa,MAAOb,EAAOa,OAC/BsC,EAAIyD,YAAc,QAClBzD,EAAI0D,UAAY,EAChB1D,EAAI2D,YACJ3D,EAAI4D,OAAOhL,EAAMsL,OAAO,GAAGvG,EAAG/E,EAAMsL,OAAO,GAAGtG,GAC9C,IAAK,IAAI1E,EAAI,EAAGA,EAAIN,EAAMsL,OAAO/K,OAAQD,IACvC8G,EAAI6D,OAAOjL,EAAMsL,OAAOhL,GAAGyE,EAAG/E,EAAMsL,OAAOhL,GAAG0E,GAEhDoC,EAAI8D,YACJ9D,EAAI+D,SACJ/D,EAAIW,c,KAIFyC,G,WACJ,WAAYzF,EAAGC,EAAG3B,EAAIC,GAAK,oBACzBoG,KAAK3E,EAAIA,EACT2E,KAAK1E,EAAIA,EACT0E,KAAKrG,GAAKA,EACVqG,KAAKpG,GAAKA,EACVoG,KAAK8B,KAAO,EACZ9B,KAAKnD,QAAS,E,qDAId,IAAMgE,EAAQvG,EAAiBqC,UAAY,GAEnCnC,EAAkBD,EAAlBC,MAAOC,EAAWF,EAAXE,OAEfuF,KAAK3E,GAAKwF,EAAQb,KAAKrG,GACvBqG,KAAK1E,GAAKuF,EAAQb,KAAKpG,GAEnBoG,KAAK3E,EAAIb,EACXwF,KAAK3E,GAAKb,EACDwF,KAAK3E,EAAI,IAClB2E,KAAK3E,GAAKb,GAGRwF,KAAK1E,EAAIb,EACXuF,KAAK1E,GAAKb,EACDuF,KAAK1E,EAAI,IAClB0E,KAAK1E,GAAKb,GAGZuF,KAAK8B,MAAQxH,EAAiBqC,UAE1BqD,KAAK8B,MAAQ,MACf9B,KAAKnD,QAAS,K,+BAKhByB,EAAWhE,EAAiBoD,IAAKsC,KAAK3E,EAAG2E,KAAK1E,EAAG,EAAG0E,KAAKgB,W,2CAIzD,OAAOnI,EAAemH,KAAK3E,EAAG2E,KAAK1E,EAAG,K,8BAGhCoC,EAAKrC,EAAGC,GACdoC,EAAII,OACJJ,EAAIuD,UAAU1G,EAAOc,EAAIA,EAAId,EAAOa,MAAOb,EAAOe,EAAIA,EAAIf,EAAOa,OACjEsC,EAAItC,MAAMb,EAAOa,MAAOb,EAAOa,OAC/BsC,EAAIyD,YAAc,QAClBzD,EAAI0D,UAAY,EAChB1D,EAAI2D,YACJ3D,EAAIqE,IAAI,EAAG,EAAG,EAAG,EAAG,EAAIlK,KAAKuH,IAC7B1B,EAAI+D,SACJ/D,EAAIW,c,KIzqBJzI,GAAQ,GAER0E,GAAmB,GAEjBC,GACD,IADCA,GAED,IAGL,SAASY,GAAYX,EAAOC,GAC1B7E,GAAM4E,MAAQA,EACd5E,GAAM6E,OAASA,EACf7E,GAAMwF,MAAQvD,KAAKJ,IAAI+C,EAAQD,GAAUE,EAASF,IAClD3E,GAAMoM,SAAWxH,EAAQD,GAAW3E,GAAMwF,OAAS,EACnDxF,GAAMqM,SAAWxH,EAASF,GAAW3E,GAAMwF,OAAS,EAyBtD,SAASqB,KAAU,IAAD,EACUnC,GAC1Ba,GAFgB,EACRX,MADQ,EACDC,QAIjB,SAASiC,KAAU,IAAD,EAC+B9G,GAAvC6F,EADQ,EACRA,OAAQyG,EADA,EACAA,UAAWxG,EADX,EACWA,MAAOM,EADlB,EACkBA,SAElC,IAAKpG,GAAMuM,SAAU,CAGnB,GAFAvM,GAAMwM,aAEDxM,GAAMwM,WAAa,MAAS,EAAG,CAClC,IAAMC,EAAI7F,GAAgB,GAAI,KACxB8F,EAAM9F,GAAgB,GAAI,KAC1B+F,EAAI1K,KAAKC,MAAMlC,GAAM4E,MAAQ5E,GAAMwF,OACzC8G,EAAUpL,KAAK,IAAI0L,GAAkBD,EAAG,EAAG,GAAIF,EAAG,UAClDH,EAAUpL,KAAK,IAAI0L,GAAkBD,EAAGF,EAAIC,EAAK,GAAI/H,GAAW8H,EAAIC,EAAK,UAG3E7G,EAAOiB,OAAOV,GAEd,IAAK,IAAIpF,EAAI,EAAGA,EAAIsL,EAAUrL,OAAQD,IACpCsL,EAAUtL,GAAG8F,SAGf9G,GAAMsM,UAAYA,EAAUtF,QAAO,SAAAvB,GAAC,OAAIA,EAAEoH,YAE1C/G,EAAMxF,KAAO,UAAYN,GAAMwM,WAI/B,IAFA,IAAMnI,EAAOwB,EAAOuB,qBAEXpG,EAAI,EAAGA,EAAIsL,EAAUrL,OAAQD,GAAK,EACrCqC,EAAQgB,EAAMiI,EAAUtL,GAAGoG,wBAC7BpH,GAAMuM,UAAW,GAIjBvM,GAAMuM,WACR7H,GAAiBoI,YAAY,CAAC,cAC9BpI,GAAiBqI,WAAW,CAC1B,CACErL,KAAM,WACNL,KAAM,UACNe,SAAUwD,QAOpB,SAASiC,KAAU,IACTC,EAAQpD,GAARoD,IADQ,EAEoC9H,GAA5C4E,EAFQ,EAERA,MAAOC,EAFC,EAEDA,OAAQgB,EAFP,EAEOA,OAAQyG,EAFf,EAEeA,UAAWxG,EAF1B,EAE0BA,MAE1CgC,EAAIC,UAAU,EAAG,EAAGnD,EAAOC,GAE3BiD,EAAIE,UAAY,OAChBF,EAAIG,SAASjI,GAAMoM,QAASpM,GAAMqM,QAAS1H,GAAW3E,GAAMwF,MAAOb,GAAW3E,GAAMwF,OAEpFsC,EAAII,OACJJ,EAAIzD,KAAKrE,GAAMoM,QAASpM,GAAMqM,QAAS1H,GAAW3E,GAAMwF,MAAOb,GAAW3E,GAAMwF,OAChFsC,EAAIK,OAEJtC,EAAOgC,OAAOC,GAEd,IAAK,IAAI9G,EAAI,EAAGA,EAAIsL,EAAUrL,OAAQD,GAAK,EACzCsL,EAAUtL,GAAG6G,OAAOC,GAGtBhC,EAAM+B,OAAOC,GAEbA,EAAIW,UAGN,SAAS7C,KACP5F,GAAMuM,UAAW,EACjBvM,GAAMwM,WAAa,EACnBxM,GAAMsM,UAAY,GAClBtM,GAAM6F,OAAOJ,EAAI,GACjBzF,GAAM6F,OAAOH,EAAI,GACjBhB,GAAiBqI,aAGnB,SAAShE,GAAcxH,GACrBvB,GAAMoG,SAAS7E,EAAMyH,OAAQ,EAG/B,SAASC,GAAY1H,GACnBvB,GAAMoG,SAAS7E,EAAMyH,OAAQ,EAG/B,SAASpC,GAAgB/E,EAAKC,GAC5B,OAAOG,KAAKC,MAAMD,KAAKmH,UAAYtH,EAAMD,EAAM,GAAKA,G,IAGhDmL,G,WACJ,WAAYvH,EAAGC,EAAGuH,EAAOC,EAAUC,EAAU7M,GAAO,oBAClD8J,KAAK3E,EAAIA,EACT2E,KAAK1E,EAAIA,EACT0E,KAAK6C,MAAQA,EACb7C,KAAK8C,SAAWA,EAChB9C,KAAK+C,SAAWA,EAChB/C,KAAK9J,KAAOA,E,mDAGPwH,GACLA,EAAIM,MAAQgC,KAAK+C,SAAWnN,GAAMwF,OAAOxD,QAAQ,GAAK,MAAQoI,KAAK8C,SACnEpF,EAAIE,UAAYoC,KAAK6C,MACrBnF,EAAIO,UAAY,QAChBP,EAAIQ,aAAe,MAJT,IAKJ7C,EAAS2E,KAAT3E,EAAGC,EAAM0E,KAAN1E,EACTD,EAAIA,EAAIzF,GAAMwF,MAAQxF,GAAMoM,QAC5B1G,EAAIA,EAAI1F,GAAMwF,MAAQxF,GAAMqM,QAC5BvE,EAAIS,SAAS6B,KAAK9J,KAAMmF,EAAGC,O,KAIzB0H,G,WACJ,WAAY3H,EAAGC,EAAGtC,EAAQ6J,GAAQ,oBAChC7C,KAAK3E,EAAIA,EACT2E,KAAK1E,EAAIA,EACT0E,KAAKhH,OAASA,EACdgH,KAAK6C,MAAQA,EACb7C,KAAKiD,OAAS,EACdjD,KAAKkD,OAAS,E,mDAGTlH,GACLgE,KAAKiD,OAAS,EACdjD,KAAKkD,OAAS,GAEVlH,EAAQ,MAAYA,EAAQ,WAC9BgE,KAAKkD,QAAU,IAGblH,EAAQ,MAAYA,EAAQ,aAC9BgE,KAAKkD,QAAU,IAGblH,EAAQ,MAAYA,EAAQ,aAC9BgE,KAAKiD,QAAU,IAGbjH,EAAQ,MAAYA,EAAQ,cAC9BgE,KAAKiD,QAAU,GAGjBjD,KAAK3E,GAAK2E,KAAKiD,OACfjD,KAAK1E,GAAK0E,KAAKkD,OAEXlD,KAAK3E,EAAI2E,KAAKhH,OAChBgH,KAAK3E,EAAI2E,KAAKhH,OACLgH,KAAK3E,EAAI2E,KAAKhH,OAASuB,KAChCyF,KAAK3E,EAAId,GAAWyF,KAAKhH,QAGvBgH,KAAK1E,EAAI0E,KAAKhH,OAChBgH,KAAK1E,EAAI0E,KAAKhH,OACLgH,KAAK1E,EAAI0E,KAAKhH,OAASuB,KAChCyF,KAAK1E,EAAIf,GAAWyF,KAAKhH,U,6BAItB0E,GACLA,EAAIE,UAAYoC,KAAK6C,MADX,IAEJxH,EAAiB2E,KAAjB3E,EAAGC,EAAc0E,KAAd1E,EAAGtC,EAAWgH,KAAXhH,OACZqC,EAAIA,EAAIzF,GAAMwF,MAAQxF,GAAMoM,QAC5B1G,EAAIA,EAAI1F,GAAMwF,MAAQxF,GAAMqM,QAC5BjJ,GAAUpD,GAAMwF,MAChBsC,EAAI2D,YACJ3D,EAAIqE,IAAI1G,EAAGC,EAAGtC,EAAQ,EAAa,EAAVnB,KAAKuH,IAAQ,GACtC1B,EAAIyF,S,2CAIJ,OAAOtK,EAAemH,KAAK3E,EAAG2E,KAAK1E,EAAG0E,KAAKhH,Y,KAIzCwJ,G,WACJ,WAAYnH,EAAGC,EAAGd,EAAOC,EAAQoI,GAAQ,oBACvC7C,KAAK3E,EAAIA,EACT2E,KAAK1E,EAAIA,EACT0E,KAAKxF,MAAQA,EACbwF,KAAKvF,OAASA,EACduF,KAAK6C,MAAQA,EACb7C,KAAKyC,UAAW,E,qDAIhBzC,KAAK3E,IACD2E,KAAK3E,EAAI2E,KAAKxF,OAAS,IACzBwF,KAAKyC,UAAW,K,6BAIb/E,GACLA,EAAIE,UAAYoC,KAAK6C,MADX,IAEJxH,EAAwB2E,KAAxB3E,EAAGC,EAAqB0E,KAArB1E,EAAGd,EAAkBwF,KAAlBxF,MAAOC,EAAWuF,KAAXvF,OACnBY,EAAIA,EAAIzF,GAAMwF,MAAQxF,GAAMoM,QAC5B1G,EAAIA,EAAI1F,GAAMwF,MAAQxF,GAAMqM,QAC5BzH,GAAS5E,GAAMwF,MACfX,GAAU7E,GAAMwF,MAChBsC,EAAIG,SAASxC,EAAGC,EAAGd,EAAOC,K,2CAI1B,OAAOjC,EAAkBwH,KAAK3E,EAAG2E,KAAK1E,EAAG0E,KAAK3E,EAAI2E,KAAKxF,MAAOwF,KAAK1E,EAAI0E,KAAKvF,Y,KCxP5E7E,GAAQ,GAER0E,GAAmB,GAsBvB,SAASmC,KAAU,IAAD,EACenC,GAAvBoD,EADQ,EACRA,IAAKlD,EADG,EACHA,MAAOC,EADJ,EACIA,OACpB7E,GAAM4E,MAAQA,EACd5E,GAAM6E,OAASA,EACf7E,GAAMwN,MAAQ1F,EAAI2F,gBAAgB7I,EAAOC,GAG3C,SAASiC,KAAU,IAAD,EAC0B9G,GAAlC0N,EADQ,EACRA,KAAM9I,EADE,EACFA,MAAOC,EADL,EACKA,OAAQuB,EADb,EACaA,SAEzBA,EAAQ,WACNpG,GAAM0N,KAAO,GACf1N,GAAM0N,OAINtH,EAAQ,SACNpG,GAAM0N,KAAO,KACf1N,GAAM0N,OAMV,IAFA,IAAMC,EAAS3N,GAAMwN,MAAMI,KAElBlI,EAAI,EAAGA,EAAIb,EAAQa,GAAKgI,EAC/B,IAAK,IAAIjI,EAAI,EAAGA,EAAIb,EAAOa,GAAKiI,EAE9B,IADA,IAAMT,EAAQhL,KAAKC,MAAsB,IAAhBD,KAAKmH,UACrBpF,EAAK0B,EAAG1B,EAAK/B,KAAKJ,IAAI6D,EAAIgI,EAAM7I,GAASb,IAChD,IAAK,IAAID,EAAK0B,EAAG1B,EAAK9B,KAAKJ,IAAI4D,EAAIiI,EAAM9I,GAAQb,IAAM,CACrD,IAAM8J,EAA0B,GAAnB7J,EAAKY,EAAQb,GAC1B4J,EAAOE,GAAOZ,EACdU,EAAOE,EAAM,GAAKZ,EAClBU,EAAOE,EAAM,GAAKZ,EAClBU,EAAOE,EAAM,GAAK,KAO5B,SAAShG,KACSnD,GAARoD,IACJgG,aAAa9N,GAAMwN,MAAO,EAAG,GAGnC,SAASzE,GAAcxH,GACrBvB,GAAMoG,SAAS7E,EAAMyH,OAAQ,EAG/B,SAASC,GAAY1H,GACnBvB,GAAMoG,SAAS7E,EAAMyH,OAAQ,ECnE/B,IAAM+E,GAAQ,CNkDC,SAAoBrN,GAAO,MACxCgE,EAAmBhE,EACXkE,EAFgC,EAEhCA,MAAOC,EAFyB,EAEzBA,OAcf,OAbA7E,EAAQ,CACN6F,OAAQ,IAAIgF,GACZtE,aAAc,IAAIgE,GAAa,CAACzF,EAAOI,MAAOJ,EAAOK,OAAQ,KAAK,SAACuE,EAAOM,GACxE,OAAIA,EAAQ,IACHA,EAAS,GAEXA,KAET5D,SAAU,IAEZR,IACAL,EAAYX,EAAOC,GACnByB,WAAWtG,EAAMuG,aAAaC,MAAO,KAC9B,CACLnF,KAAM,YACNwF,SACAC,SACAe,SACAkB,gBACAE,eACAC,eACAzC,eI9DW,SAAoB/F,GAAO,MACxCgE,GAAmBhE,EACXkE,EAFgC,EAEhCA,MAAOC,EAFyB,EAEzBA,OAUf,OATA7E,GAAQ,CACNuM,UAAU,EACVC,WAAY,EACZF,UAAW,GACXzG,OAAQ,IAAIuH,GAAgB,GAAI,GAAI,GAAI,OACxCtH,MAAO,IAAIkH,GAAcrI,GAAU,EAAG,QAAS,WAAY,EAAG,YAC9DyB,SAAU,IAEZb,GAAYX,EAAOC,GACZ,CACLxD,KAAM,QACNwF,UACAC,UACAe,UACAkB,iBACAE,iBCjCW,SAAoBvI,GAAO,MACxCgE,GAAmBhE,EACXoH,EAFgC,EAEhCA,IAAKlD,EAF2B,EAE3BA,MAAOC,EAFoB,EAEpBA,OAQpB,OAPA7E,GAAQ,CACN0N,KAAM,EACN9I,QACAC,SACA2I,MAAO1F,EAAI2F,gBAAgB7I,EAAOC,GAClCuB,SAAU,IAEL,CACL/E,KAAM,QACNwF,UACAC,UACAe,UACAkB,iBACAE,kBCXA+E,GAAY,EAEZ9H,GAAY,GAEVlG,GAAQ,CACZiO,eAAgB,EAChBzB,WAAY,EACZ0B,QAAQ,EACRC,eAAe,GAGXC,GAAc,CAClBtG,IAAK,KACLf,UAAW,EACXnC,MAAO,EACPC,OAAQ,GAyMKwJ,OAtMf,WACE,IAAMC,EAAYC,IAAMC,OAAO,MACzBC,EAAaF,IAAMC,OAAO,MAC1BE,EAAkBH,IAAMC,OAAO,GAHxB,EAKSD,IAAMI,SAAS,GAA5BC,EALI,sBAMiBL,IAAMI,WANvB,mBAMNzO,EANM,KAMG2O,EANH,OAOaN,IAAMI,WAPnB,mBAONjM,EAPM,KAOCoM,EAPD,OAQiBP,IAAMI,WARvB,mBAQN5N,EARM,KAQGgM,EARH,KAUb,SAASgC,IACH7I,GAAUO,YACZP,GAAUO,aAEZuH,IAAaA,GAAYD,GAAM9M,OAAS,GAAK8M,GAAM9M,OACnDiF,GAAY6H,GAAMC,IAAWI,IAC7BU,EAAS5I,GAAU7E,MACnB0L,EAAW7G,GAAUnF,SACrBf,GAAMiO,eAAiB,EACvBjO,GAAMwM,WAAa,EAGrB,SAASwC,IACH9I,GAAUO,YACZP,GAAUO,aAEZuH,IAAaA,GAAY,GAAKD,GAAM9M,OACpCiF,GAAY6H,GAAMC,IAAWI,IAC7BU,EAAS5I,GAAU7E,MACnB0L,EAAW7G,GAAUnF,SACrBf,GAAMiO,eAAiB,EACvBjO,GAAMwM,WAAa,EAGrB,IAYMyC,EAAe,WACnBJ,IACA7O,GAAMkP,kBAAe5E,GAGjB6E,EAAgBZ,IAAMa,aAAY,WACtCxE,aAAa5K,GAAMkP,cACnBD,MACC,IAEHb,GAAYtB,YAfQ,SAAC5M,GACnB2O,EAAW3O,GACXF,GAAMkP,aAAe5I,WAAW2I,EAAc,MAchDb,GAAYrB,WAAaA,EACzBqB,GAAYiB,MAAQ,WAAQrP,GAAMkO,QAAS,GAC3CE,GAAYkB,QAAU,WAAQtP,GAAMkO,QAAS,GAE7C,IAAMqB,EAAchB,IAAMa,aAAY,WAAQR,GAAU,SAAAnJ,GAAC,OAAIA,EAAI,OAAO,IAElEsD,EAAgBwF,IAAMa,aAAY,SAAC7N,GACpB,aAAfA,EAAMyH,MACRzH,EAAMiO,iBACNR,KACwB,WAAfzN,EAAMyH,MACfzH,EAAMiO,iBACNT,KACwB,WAAfxN,EAAMyH,MACfzH,EAAMiO,iBACNxP,GAAMkO,QAAUlO,GAAMkO,OAClBhI,GAAUgD,aACZhD,GAAUgD,YAAYlJ,GAAMkO,QAE9BiB,IACAI,KAGIrJ,GAAU6C,eACZ7C,GAAU6C,cAAcxH,KAG3B,CAACgO,EAAaJ,IAEXlG,EAAc,SAAC1H,GACf2E,GAAU+C,aACZ/C,GAAU+C,YAAY1H,IAsF1B,OAlFAgN,IAAMkB,WAAU,WACd,IAAMC,EAASpB,EAAUqB,QACnBtL,EAAOqL,EAAOE,wBACpBxB,GAAYtG,IAAM4H,EAAOG,WAAW,MACpCzB,GAAYxJ,MAAQP,EAAKO,MAAQkL,OAAOC,iBACxC3B,GAAYvJ,OAASR,EAAKQ,OAASiL,OAAOC,iBAE1C7J,GAAY6H,GAAMC,IAAWI,IAC7BU,EAAS5I,GAAU7E,MACnB0L,EAAW7G,GAAUnF,SAiDrB,OAJA+O,OAAOE,iBAAiB,UAAWjH,GACnC+G,OAAOE,iBAAiB,QAAS/G,GAEjCwF,EAAWkB,QAAUM,uBA9CL,SAAVC,EAAUC,GACd,QAAgC7F,IAA5BoE,EAAgBiB,QAAuB,CACzCvB,GAAYrH,UAAYoJ,EAAczB,EAAgBiB,QAEtD,IAAMtL,EAAOqL,EAAOE,wBACpBF,EAAO9K,MAAQP,EAAKO,MAAQkL,OAAOC,iBACnCL,EAAO7K,OAASR,EAAKQ,OAASiL,OAAOC,iBAEjCL,EAAO9K,QAAUwJ,GAAYxJ,OAAS8K,EAAO7K,SAAWuJ,GAAYvJ,SACtE7E,GAAMiO,eAAiB,EACvBjO,GAAMwM,WAAa,EACnB4B,GAAYxJ,MAAQ8K,EAAO9K,MAC3BwJ,GAAYvJ,OAAS6K,EAAO7K,OAExBqB,GAAUW,QACZX,GAAUW,UAId,IAAMuJ,EAAKC,YAAYC,MAEnBpK,GAAUY,SAAW9G,GAAMkO,QAC7BhI,GAAUY,SAGRZ,GAAU2B,QACZ3B,GAAU2B,SAGZ,IAAM0I,EAAKF,YAAYC,MAEvBtQ,GAAMiO,gBAAkBsC,EAAKH,EAC7BpQ,GAAMwM,aAEFxM,GAAMmO,eA8ClB,WAA0B,IAChBF,EAA+BjO,GAA/BiO,eAAgBzB,EAAexM,GAAfwM,WAChB1E,EAAesG,GAAftG,IAAKlD,EAAUwJ,GAAVxJ,MACPtE,EAAO4F,GAAU7E,KAAO,MAAQ4M,EAAiBzB,GAAYxK,QAAQ,GAAK,OAChF8F,EAAIE,UAAY,QAChBF,EAAIM,KAAO,iBACXN,EAAIO,UAAY,SAChBP,EAAIQ,aAAe,MACnBR,EAAI0I,cAAgB,EACpB1I,EAAI2I,cAAgB,EACpB3I,EAAI4I,YAAc,wBAClB5I,EAAI6I,WAAa,EACjB7I,EAAIS,SAASjI,EAAMsE,EAAQ,EAAG,GAzDtBgM,GAIJlC,EAAgBiB,QAAUQ,EAC1B1B,EAAWkB,QAAUM,sBAAsBC,MAOtC,WACLJ,OAAOe,oBAAoB,UAAW9H,GACtC+G,OAAOe,oBAAoB,QAAS5H,GACpC6H,qBAAqBrC,EAAWkB,YAEjC,CAACrB,EAAWvF,IAoBb,yBAAKnI,UAAU,UACb,4BAAQR,GAAG,SAAS2Q,IAAKzC,IACzB,kBAAC,EAAD,CAASpO,QAASA,EAASC,QA/IR,SAACoB,GACtBA,EAAMiO,iBACFxP,GAAMkP,cACRC,OA6IA,kBAAC,EAAD,CAAM5M,KAAMvC,GAAMkO,OAAQ1L,gBAdN,SAACjB,GACvBA,EAAMiO,iBACNR,KAY8DvM,YAT5C,SAAClB,GACnBA,EAAMiO,iBACNT,KAOwFzN,SArBzE,SAACqB,EAAQxB,GACpBA,IAAUwB,EAAOxB,QACnB+E,GAAU8K,UAAUrO,EAAQxB,GAC5BoO,MAkB0G7M,MAAOA,EAAO3B,QAASA,MCjMnHkQ,QACW,cAA7BnB,OAAOoB,SAASC,UAEa,UAA7BrB,OAAOoB,SAASC,UAEhBrB,OAAOoB,SAASC,SAASC,MACvB,2DCZJC,IAASxJ,OACP,kBAAC,IAAMyJ,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAM9R,c","file":"static/js/main.7d93966c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/thrust.1a67a2d9.wav\";","module.exports = __webpack_public_path__ + \"static/media/fire.c4dc2846.wav\";","module.exports = __webpack_public_path__ + \"static/media/beat1.a014226b.wav\";","module.exports = __webpack_public_path__ + \"static/media/beat2.a02b010d.wav\";","module.exports = __webpack_public_path__ + \"static/media/bangLarge.23e343a2.wav\";","module.exports = __webpack_public_path__ + \"static/media/bangMedium.0caca04f.wav\";","module.exports = __webpack_public_path__ + \"static/media/bangSmall.1bf00be1.wav\";","import thrust from '../sounds/thrust.wav'\r\nimport fire from '../sounds/fire.wav'\r\nimport beat1 from '../sounds/beat1.wav'\r\nimport beat2 from '../sounds/beat2.wav'\r\nimport bangLarge from '../sounds/bangLarge.wav'\r\nimport bangMedium from '../sounds/bangMedium.wav'\r\nimport bangSmall from '../sounds/bangSmall.wav'\r\nimport { collide, boundingCircle, boundingRectangle } from '../lib/collision';\r\n\r\nlet state;\r\n\r\nconst GAME_STATE_WAITING = 0;\r\nconst GAME_STATE_PLAYING = 1;\r\nconst GAME_STATE_PAUSED = 2;\r\nconst GAME_STATE_GAMEOVER = 3;\r\n\r\nlet applicationState = {};\r\n\r\nconst screen = {\r\n  width: 1440,\r\n  height: 1080\r\n};\r\n\r\nconst maxSpeed = 6;\r\n\r\nconst fireRate = 200;\r\nconst maxBullets = 4;\r\n\r\nconst bigAsteroid = 80;\r\nconst mediumAsteroid = 40;\r\nconst smallAsteroid = 20;\r\n\r\nconst sounds = {\r\n  thrust: loadSound(thrust, 10),\r\n  fire: loadSound(fire, 10),\r\n  beat1: loadSound(beat1, 1),\r\n  beat2: loadSound(beat2, 1),\r\n  bangLarge: loadSound(bangLarge, 10),\r\n  bangMedium: loadSound(bangMedium, 10),\r\n  bangSmall: loadSound(bangSmall, 10),\r\n};\r\n\r\nfunction adjustScale(width, height) {\r\n  state.width = width;\r\n  state.height = height;\r\n  screen.scale = Math.min(width / screen.width, height / screen.height);\r\n  screen.x = (width - screen.width * screen.scale) / 2;\r\n  screen.y = (height - screen.height * screen.scale) / 2;\r\n}\r\n\r\nconst keyMap = {\r\n  left: 'KeyA',\r\n  right: 'KeyD',\r\n  thrust: 'KeyW',\r\n  fire: 'Space'\r\n};\r\n\r\nexport default function initialize(props) {\r\n  applicationState = props;\r\n  const { width, height } = applicationState;\r\n  state = {\r\n    player: new Player(),\r\n    ambientSound: new AmbientSound([sounds.beat1, sounds.beat2], 800, (count, delay) => {\r\n      if (delay > 200) {\r\n        return delay -= 10;\r\n      }\r\n      return delay;\r\n    }),\r\n    keyState: {}\r\n  }\r\n  reset();\r\n  adjustScale(width, height);\r\n  setTimeout(state.ambientSound.start, 100);\r\n  return {\r\n    name: 'asteroids',\r\n    resize,\r\n    update,\r\n    render,\r\n    handleKeyDown,\r\n    handleKeyUp,\r\n    handlePause,\r\n    handleExit\r\n  }\r\n}\r\n\r\nfunction reset() {\r\n  state.player.reset();\r\n  state.score = 0;\r\n  state.bullets = [];\r\n  state.asteroids = [];\r\n  state.level = 0;\r\n  state.gameState = GAME_STATE_WAITING;\r\n  state.waitTime = 0;\r\n  state.keyState = {};\r\n  generateAsteroids();\r\n  setTimeout(state.ambientSound.start, 100);\r\n}\r\n\r\nfunction handleExit() {\r\n  state.ambientSound.stop();\r\n}\r\n\r\nfunction generateAsteroids() {\r\n  for (let i = 0; i < 4 + state.level * 2; i++) {\r\n    state.asteroids.push(new Asteroid(getRandomNumber(0, screen.width), getRandomNumber(0, screen.height), getRandomNumber(0, 360), bigAsteroid, getRandomNumber(1, 2)));\r\n  }\r\n}\r\n\r\nfunction resize() {\r\n  const { width, height } = applicationState;\r\n  adjustScale(width, height);\r\n}\r\n\r\nfunction update() {\r\n  if (state.gameState === GAME_STATE_PAUSED) {\r\n    state.gameState = GAME_STATE_PLAYING;\r\n  }\r\n\r\n  if (state.gameState === GAME_STATE_PLAYING) {\r\n    state.player.update();\r\n  } else if (state.gameState === GAME_STATE_WAITING) {\r\n    if (state.keyState[keyMap.left] || state.keyState[keyMap.right] || state.keyState[keyMap.thrust] || state.keyState[keyMap.fire]) {\r\n      state.gameState = GAME_STATE_PLAYING;\r\n    }\r\n  } else if (state.gameState === GAME_STATE_GAMEOVER) {\r\n    state.waitTime -= applicationState.deltaTime;\r\n    if (state.waitTime < 0) {\r\n      reset();\r\n    }\r\n  }\r\n\r\n  state.bullets = state.bullets.filter(x => x.active);\r\n\r\n  if (state.bullets.length > maxBullets) {\r\n    state.bullets.splice(0, state.bullets.length - maxBullets);\r\n  }\r\n\r\n  for (let i = 0; i < state.bullets.length; i++) {\r\n    state.bullets[i].update();\r\n  }\r\n\r\n  state.asteroids = state.asteroids.filter(x => x.active);\r\n\r\n  for (let i = 0; i < state.asteroids.length; i++) {\r\n    state.asteroids[i].update();\r\n  }\r\n\r\n  const playerBounds = state.player.getCollisionBounds();\r\n\r\n  let playerHit = false;\r\n\r\n  for (let i = 0; i < state.asteroids.length; i++) {\r\n    const asteroid = state.asteroids[i];\r\n    let asteroidHit = false;\r\n    const bounds = asteroid.getCollisionBounds();\r\n    for (let k = 0; k < bounds.length; k++) {\r\n      for (let j = 0; j < state.bullets.length; j++) {\r\n        if (collide(bounds[k], state.bullets[j].getCollisionBounds())) {\r\n          state.bullets[j].active = false;\r\n          asteroidHit = true;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (!asteroidHit && state.gameState === GAME_STATE_PLAYING) {\r\n      for (let k = 0; k < bounds.length; k++) {\r\n        for (let j = 0; j < playerBounds.length; j++) {\r\n          if (collide(bounds[k], playerBounds[j])) {\r\n            playerHit = true;\r\n            asteroidHit = true;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (asteroidHit) {\r\n      asteroid.active = false;\r\n      if (asteroid.radius === bigAsteroid) {\r\n        state.score += 20;\r\n        playSound(sounds.bangLarge);\r\n        state.asteroids.push(new Asteroid(asteroid.x - 15, asteroid.y - 15, getRandomNumber(0, 360), mediumAsteroid, getRandomNumber(1, 2)));\r\n        state.asteroids.push(new Asteroid(asteroid.x + 15, asteroid.y + 15, getRandomNumber(0, 360), mediumAsteroid, getRandomNumber(1, 2)));\r\n      } else if (asteroid.radius === mediumAsteroid) {\r\n        state.score += 50;\r\n        playSound(sounds.bangMedium);\r\n        state.asteroids.push(new Asteroid(asteroid.x - 5, asteroid.y - 5, getRandomNumber(0, 360), smallAsteroid, getRandomNumber(1, 2)));\r\n        state.asteroids.push(new Asteroid(asteroid.x + 5, asteroid.y + 5, getRandomNumber(0, 360), smallAsteroid, getRandomNumber(1, 2)));\r\n      } else {\r\n        state.score += 100;\r\n        playSound(sounds.bangSmall);\r\n      }\r\n    }\r\n  }\r\n\r\n  if (playerHit) {\r\n    stopSoundLoop(sounds.thrust);\r\n    state.ambientSound.stop();\r\n    state.gameState = GAME_STATE_GAMEOVER;\r\n    state.waitTime = 10000;\r\n  }\r\n\r\n  if (state.asteroids.length === 0) {\r\n    state.ambientSound.stop();\r\n    state.level++;\r\n    generateAsteroids();\r\n    setTimeout(state.ambientSound.start, 1100);\r\n  }\r\n}\r\n\r\nfunction render() {\r\n  const { ctx, width, height } = applicationState;\r\n\r\n  ctx.clearRect(0, 0, width, height);\r\n\r\n  ctx.fillStyle = '#111';\r\n  ctx.fillRect(screen.x, screen.y, screen.width * screen.scale, screen.height * screen.scale);\r\n\r\n  ctx.save();\r\n  ctx.rect(screen.x, screen.y, screen.width * screen.scale, screen.height * screen.scale);\r\n  ctx.clip();\r\n\r\n  if (state.gameState === GAME_STATE_PLAYING || state.gameState === GAME_STATE_PAUSED) {\r\n    state.player.render();\r\n  }\r\n\r\n  for (let i = 0; i < state.bullets.length; i++) {\r\n    state.bullets[i].render();\r\n  }\r\n\r\n  for (let i = 0; i < state.asteroids.length; i++) {\r\n    state.asteroids[i].render();\r\n  }\r\n\r\n  {\r\n    ctx.font = '100 ' + (screen.scale * 42).toFixed(0) + 'px Hyperspace';\r\n    ctx.fillStyle = 'white';\r\n    ctx.textAlign = 'end';\r\n    ctx.textBaseline = 'bottom';\r\n    const x = screen.x + screen.width * screen.scale / 5;\r\n    const y = screen.y + screen.width * screen.scale / 12;\r\n    ctx.fillText(state.score.toFixed(0).padStart(7), x, y);\r\n  }\r\n\r\n  {\r\n    ctx.font = '100 ' + (screen.scale * 24).toFixed(0) + 'px Hyperspace';\r\n    ctx.fillStyle = 'white';\r\n    ctx.textAlign = 'center';\r\n    ctx.textBaseline = 'bottom';\r\n    const x = screen.x + screen.width * screen.scale / 2;\r\n    const y = screen.y + screen.width * screen.scale / 12;\r\n    ctx.fillText(state.level.toFixed(0).padStart(2, '0'), x, y);\r\n  }\r\n\r\n  if (state.gameState === GAME_STATE_WAITING) {\r\n    ctx.font = '100 ' + (screen.scale * 30).toFixed(0) + 'px Hyperspace';\r\n    ctx.fillStyle = 'white';\r\n    ctx.textAlign = 'center';\r\n    ctx.textBaseline = 'middle';\r\n    const x = screen.x + screen.width * screen.scale / 2;\r\n    const y = screen.y + screen.height * screen.scale / 2;\r\n    ctx.fillText('PRESS ANY CONTROL TO BEGIN', x, y);\r\n  } else if (state.gameState === GAME_STATE_GAMEOVER) {\r\n    ctx.font = '100 ' + (screen.scale * 100).toFixed(0) + 'px Hyperspace';\r\n    ctx.fillStyle = 'white';\r\n    ctx.textAlign = 'center';\r\n    ctx.textBaseline = 'middle';\r\n    const x = screen.x + screen.width * screen.scale / 2;\r\n    const y = screen.y + screen.height * screen.scale / 2;\r\n    ctx.fillText('GAME OVER', x, y);\r\n  }\r\n\r\n  ctx.restore();\r\n}\r\n\r\nfunction renderWrap(ctx, x, y, radius, render, props) {\r\n  const locations = getLocations(x, y, radius);\r\n\r\n  for (let j = 0; j < locations.y.length; j++) {\r\n    for (let i = 0; i < locations.x.length; i++) {\r\n      render(ctx, x + locations.x[i], y + locations.y[j], props);\r\n    }\r\n  }\r\n}\r\n\r\nfunction getLocations(x, y, radius) {\r\n  const xos = [0];\r\n\r\n  if (x < radius) {\r\n    xos.push(screen.width);\r\n  }\r\n\r\n  if (x > screen.width - radius) {\r\n    xos.push(-screen.width);\r\n  }\r\n\r\n  const yos = [0];\r\n\r\n  if (y < radius) {\r\n    yos.push(screen.height);\r\n  }\r\n\r\n  if (y > screen.height - radius) {\r\n    yos.push(-screen.height);\r\n  }\r\n\r\n  return {\r\n    x: xos,\r\n    y: yos\r\n  };\r\n}\r\n\r\nfunction handleKeyDown(event) {\r\n  state.keyState[event.code] = true;\r\n}\r\n\r\nfunction handleKeyUp(event) {\r\n  state.keyState[event.code] = false;\r\n}\r\n\r\nfunction handlePause(isPaused) {\r\n  if (state.gameState === GAME_STATE_PLAYING) {\r\n    if (isPaused) {\r\n      state.gameState = GAME_STATE_PAUSED;\r\n    }\r\n  } else if (state.gameState === GAME_STATE_PAUSED) {\r\n    if (!isPaused) {\r\n      state.gameState = GAME_STATE_PLAYING;\r\n    }\r\n  }\r\n}\r\n\r\nfunction getRandomNumber(min, max) {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\n\r\nfunction angleToPoint(angle, radius) {\r\n  return {\r\n    x: Math.cos((angle - 90) * (Math.PI / 180)) * radius,\r\n    y: Math.sin((angle - 90) * (Math.PI / 180)) * radius\r\n  }\r\n}\r\n\r\nfunction loadSound(name, count) {\r\n  const samples = [];\r\n  for (let i = 0; i < count; i++) {\r\n    samples.push(new Audio(name));\r\n  }\r\n  return {\r\n    index: 0,\r\n    samples\r\n  }\r\n}\r\n\r\nfunction playSound(sound) {\r\n  sound.samples[sound.index].play();\r\n  sound.index = (sound.index + 1) % sound.samples.length;\r\n}\r\n\r\nfunction startSoundLoop(sound, delay) {\r\n  if (!sound.timeout) {\r\n    sound.delay = delay;\r\n    sound.continueSoundLoop = continueSoundLoop.bind(sound);\r\n    sound.continueSoundLoop();\r\n  }\r\n}\r\n\r\nfunction continueSoundLoop() {\r\n  playSound(this);\r\n  this.timeout = setTimeout(this.continueSoundLoop, this.delay);\r\n}\r\n\r\nfunction stopSoundLoop(sound) {\r\n  if (sound.timeout) {\r\n    clearInterval(sound.timeout);\r\n    sound.timeout = undefined;\r\n  }\r\n}\r\n\r\nclass AmbientSound {\r\n  constructor(sounds, maxDelay, updateDelay) {\r\n    this.sounds = sounds;\r\n    this.maxDelay = maxDelay;\r\n    this.updateDelay = updateDelay;\r\n    this.isPlaying = false;\r\n    this.start = this.start.bind(this);\r\n    this.stop = this.stop.bind(this);\r\n    this.playNextSound = this.playNextSound.bind(this);\r\n  }\r\n\r\n  start() {\r\n    this.isPlaying = true;\r\n    this.count = 0;\r\n    this.index = 0;\r\n    this.delay = this.maxDelay;\r\n    this.playNextSound();\r\n  }\r\n\r\n  stop() {\r\n    this.isPlaying = false;\r\n    clearTimeout(this.timeout);\r\n  }\r\n\r\n  playNextSound() {\r\n    if (!this.isPlaying) {\r\n      return;\r\n    }\r\n    const { delay, index } = this;\r\n    if (state.gameState === GAME_STATE_PLAYING) {\r\n      this.count++;\r\n      this.delay = this.updateDelay(this.count, this.delay);\r\n      if (this.delay !== delay) {\r\n        this.count = 0;\r\n      }\r\n      this.index = (this.index + 1) % this.sounds.length;\r\n      playSound(this.sounds[index])\r\n    }\r\n    clearTimeout(this.timeout);\r\n    this.timeout = setTimeout(this.playNextSound, delay);\r\n  }\r\n}\r\n\r\nclass Player {\r\n  constructor() {\r\n    this.reset();\r\n  }\r\n\r\n  reset() {\r\n    this.x = screen.width / 2;\r\n    this.y = screen.height / 2;\r\n    this.dx = 0;\r\n    this.dy = 0;\r\n    this.rotation = 0;\r\n    this.fireDelay = 0;\r\n    this.thrusting = false;\r\n  }\r\n\r\n  update() {\r\n    this.fireDelay -= applicationState.deltaTime;\r\n\r\n    if (this.fireDelay < 0) {\r\n      this.fireDelay = 0;\r\n    }\r\n\r\n    const delta = applicationState.deltaTime / 16;\r\n\r\n    if (state.keyState[keyMap.left]) {\r\n      this.rotation -= delta * 5;\r\n    } else if (state.keyState[keyMap.right]) {\r\n      this.rotation += delta * 5;\r\n    }\r\n\r\n    const dx = Math.cos((this.rotation - 90) * (Math.PI / 180));\r\n    const dy = Math.sin((this.rotation - 90) * (Math.PI / 180));\r\n\r\n    if (state.keyState[keyMap.fire] && this.fireDelay === 0) {\r\n      playSound(sounds.fire);\r\n      state.bullets.push(new Bullet(this.x + dx * 7.0, this.y + dy * 7.0, dx * 12.0, dy * 12.0));\r\n      this.fireDelay = fireRate;\r\n    }\r\n\r\n    const accelerationVector = {\r\n      x: delta * 0.2 * dx,\r\n      y: delta * 0.2 * dy\r\n    }\r\n\r\n    if (state.keyState[keyMap.thrust]) {\r\n      this.thrusting = true;\r\n      startSoundLoop(sounds.thrust, 275);\r\n      this.dx += accelerationVector.x;\r\n      this.dy += accelerationVector.y;\r\n    } else {\r\n      stopSoundLoop(sounds.thrust);\r\n      this.thrusting = false;\r\n      if (this.dx <= -0.01) {\r\n        this.dx += 0.01;\r\n      } else if (this.dx >= 0.01) {\r\n        this.dx -= 0.01;\r\n      }\r\n      if (this.dy <= -0.01) {\r\n        this.dy += 0.01;\r\n      } else if (this.dy >= 0.01) {\r\n        this.dy -= 0.01;\r\n      }\r\n    }\r\n\r\n    if (this.dx > maxSpeed) {\r\n      this.dx = maxSpeed;\r\n    } else if (this.dx < -maxSpeed) {\r\n      this.dx = -maxSpeed;\r\n    }\r\n\r\n    if (this.dy > maxSpeed) {\r\n      this.dy = maxSpeed;\r\n    } else if (this.dy < -maxSpeed) {\r\n      this.dy = -maxSpeed;\r\n    }\r\n\r\n    const { width, height } = screen;\r\n\r\n    this.x += this.dx;\r\n    this.y += this.dy;\r\n\r\n    if (this.x > width) {\r\n      this.x -= width;\r\n    } else if (this.x < 0) {\r\n      this.x += width;\r\n    }\r\n\r\n    if (this.y > height) {\r\n      this.y -= height;\r\n    } else if (this.y < 0) {\r\n      this.y += height;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    renderWrap(applicationState.ctx, this.x, this.y, 15, this._render, { rotation: this.rotation, thrusting: this.thrusting });\r\n  }\r\n\r\n  getCollisionBounds() {\r\n    const x = this.x - 10;\r\n    const y = this.y - 15;\r\n    const locations = getLocations(this.x, this.y, this.radius);\r\n    const bounds = [];\r\n    for (let j = 0; j < locations.y.length; j++) {\r\n      for (let i = 0; i < locations.x.length; i++) {\r\n        bounds.push(boundingRectangle(x, y, x + 20, y + 30));\r\n      }\r\n    }\r\n    return bounds;\r\n  }\r\n\r\n  _render(ctx, x, y, props) {\r\n    const { rotation, thrusting } = props;\r\n\r\n    ctx.save()\r\n    ctx.translate(screen.x + x * screen.scale, screen.y + y * screen.scale)\r\n    ctx.rotate((Math.PI / 180) * rotation)\r\n    ctx.scale(screen.scale, screen.scale);\r\n    ctx.strokeStyle = 'white'\r\n    ctx.lineWidth = 1\r\n    ctx.beginPath()\r\n    ctx.moveTo(0, 7)\r\n    ctx.lineTo(10, 15)\r\n    ctx.lineTo(0, -15)\r\n    ctx.lineTo(-10, 15)\r\n    ctx.lineTo(0, 7)\r\n    ctx.closePath()\r\n    ctx.stroke()\r\n    if (thrusting) {\r\n      ctx.moveTo(0, 17)\r\n      ctx.lineTo(5, 20)\r\n      ctx.lineTo(-5, 20)\r\n      ctx.closePath()\r\n      ctx.stroke()\r\n    }\r\n    ctx.restore()\r\n  }\r\n}\r\n\r\nclass Asteroid {\r\n  constructor(x, y, dir, radius, speed) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.dx = Math.cos((dir - 90) * (Math.PI / 180));\r\n    this.dy = Math.sin((dir - 90) * (Math.PI / 180));\r\n    this.radius = radius;\r\n    this.speed = speed;\r\n    this.points = [];\r\n    for (let i = 0; i < 10; i++) {\r\n      const offset = getRandomNumber(0, radius / 3) - radius / 6;\r\n      this.points.push(angleToPoint(i * 36, radius + offset));\r\n    }\r\n    this.active = true;\r\n  }\r\n\r\n  update() {\r\n    const delta = applicationState.deltaTime / 16;\r\n\r\n    const { width, height } = screen;\r\n\r\n    this.x += delta * this.speed * this.dx\r\n    this.y += delta * this.speed * this.dy\r\n\r\n    if (this.x > width) {\r\n      this.x -= width\r\n    } else if (this.x < 0) {\r\n      this.x += width\r\n    }\r\n\r\n    if (this.y > height) {\r\n      this.y -= height\r\n    } else if (this.y < 0) {\r\n      this.y += height\r\n    }\r\n  }\r\n\r\n  render() {\r\n    renderWrap(applicationState.ctx, this.x, this.y, this.radius, this._render, { points: this.points, radius: this.radius });\r\n  }\r\n\r\n  getCollisionBounds() {\r\n    const locations = getLocations(this.x, this.y, this.radius);\r\n    const bounds = [];\r\n    for (let j = 0; j < locations.y.length; j++) {\r\n      for (let i = 0; i < locations.x.length; i++) {\r\n        bounds.push(boundingCircle(this.x + locations.x[i], this.y + locations.y[j], this.radius));\r\n      }\r\n    }\r\n    return bounds;\r\n  }\r\n\r\n  _render(ctx, x, y, props) {\r\n    ctx.save()\r\n    ctx.translate(screen.x + x * screen.scale, screen.y + y * screen.scale)\r\n    ctx.scale(screen.scale, screen.scale);\r\n    ctx.strokeStyle = 'white'\r\n    ctx.lineWidth = 1\r\n    ctx.beginPath()\r\n    ctx.moveTo(props.points[0].x, props.points[0].y)\r\n    for (let i = 1; i < props.points.length; i++) {\r\n      ctx.lineTo(props.points[i].x, props.points[i].y)\r\n    }\r\n    ctx.closePath()\r\n    ctx.stroke()\r\n    ctx.restore()\r\n  }\r\n}\r\n\r\nclass Bullet {\r\n  constructor(x, y, dx, dy) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.dx = dx;\r\n    this.dy = dy;\r\n    this.time = 0;\r\n    this.active = true;\r\n  }\r\n\r\n  update() {\r\n    const delta = applicationState.deltaTime / 16;\r\n\r\n    const { width, height } = screen;\r\n\r\n    this.x += delta * this.dx\r\n    this.y += delta * this.dy\r\n\r\n    if (this.x > width) {\r\n      this.x -= width\r\n    } else if (this.x < 0) {\r\n      this.x += width\r\n    }\r\n\r\n    if (this.y > height) {\r\n      this.y -= height\r\n    } else if (this.y < 0) {\r\n      this.y += height\r\n    }\r\n\r\n    this.time += applicationState.deltaTime;\r\n\r\n    if (this.time >= 4000) {\r\n      this.active = false;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    renderWrap(applicationState.ctx, this.x, this.y, 1, this._render);\r\n  }\r\n\r\n  getCollisionBounds() {\r\n    return boundingCircle(this.x, this.y, 1);\r\n  }\r\n\r\n  _render(ctx, x, y) {\r\n    ctx.save()\r\n    ctx.translate(screen.x + x * screen.scale, screen.y + y * screen.scale)\r\n    ctx.scale(screen.scale, screen.scale);\r\n    ctx.strokeStyle = 'white'\r\n    ctx.lineWidth = 1\r\n    ctx.beginPath();\r\n    ctx.arc(0, 0, 1, 0, 2 * Math.PI);\r\n    ctx.stroke();\r\n    ctx.restore()\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nconst Message = ({ message, onClick }) => {\r\n  if (!message) {\r\n    return null;\r\n  }\r\n  return (\r\n    <div id=\"message\" onClick={onClick}>\r\n      {message.map((text, index) => (<div key={index}>{text}</div>))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Message;\r\n","import React from 'react';\r\n\r\nconst DescriptionControl = (props) => {\r\n  const { control } = props;\r\n  return (\r\n    <div className=\"control\">\r\n      {control.description}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst SelectControl = (props) => {\r\n  function onChange(event) {\r\n    props.onChange(control, event.target.value);\r\n  }\r\n  const { control } = props;\r\n  const options = [];\r\n  for (let i = 0; i < control.options.length; i++) {\r\n    options.push(\r\n      (<option key={i} value={i}>{control.options[i]}</option>)\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"control\">\r\n      <label htmlFor={control.name}>{control.name}</label>\r\n      <select id={control.name} className=\"select-css\" value={control.value} onChange={onChange}>\r\n        {options}\r\n      </select>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst BoolControl = (props) => {\r\n  function onChange(event) {\r\n    props.onChange(control, event.target.checked);\r\n  }\r\n  const { control } = props;\r\n  return (\r\n    <div className=\"control\">\r\n      <label className=\"clickable\" htmlFor={control.name}><input className=\"clickable\" id={control.name} type=\"checkbox\" checked={control.value} onChange={onChange} />{control.name}</label>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst IntControl = (props) => {\r\n  function onChange(event) {\r\n    props.onChange(control, event.target.value);\r\n  }\r\n  const { control } = props;\r\n  return (\r\n    <div className=\"control\">\r\n      <label htmlFor={control.name}>{control.name} {control.value}</label>\r\n      <input id={control.name} className=\"clickable\" type=\"range\" min={control.min} max={control.max} value={control.value} onChange={onChange} />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst FloatControl = (props) => {\r\n  const factor = 1000;\r\n  function onChange(event) {\r\n    props.onChange(control, event.target.value / factor);\r\n  }\r\n  const { control } = props;\r\n  return (\r\n    <div className=\"control\">\r\n      <label htmlFor={control.name}>{control.name} {control.value.toFixed(3)}</label>\r\n      <input id={control.name} className=\"clickable\" type=\"range\" min={Math.floor(control.min * factor)} max={Math.floor(control.max * factor)} value={Math.floor(control.value * factor)} onChange={onChange} />\r\n    </div>\r\n  );\r\n}\r\n\r\nconst FunctionControl = (props) => {\r\n  function onClick(event) {\r\n    control.function();\r\n  }\r\n  const { control } = props;\r\n  return (\r\n    <div className=\"control\">\r\n      <button onClick={onClick}>{control.name}</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst Menu = ({ show, onClickPrevious, onClickNext, onChange, title, options }) => {\r\n  if (!show) {\r\n    return null;\r\n  }\r\n  let controls\r\n  if (options) {\r\n    controls = options.map((option, index) => {\r\n      switch (option.type) {\r\n        case 'description':\r\n          return <DescriptionControl key={index} control={option} />\r\n        case 'select':\r\n          return <SelectControl key={index} control={option} onChange={onChange} />\r\n        case 'bool':\r\n          return <BoolControl key={index} control={option} onChange={onChange} />\r\n        case 'int':\r\n          return <IntControl key={index} control={option} onChange={onChange} />\r\n        case 'float':\r\n          return <FloatControl key={index} control={option} onChange={onChange} />\r\n        case 'function':\r\n          return <FunctionControl key={index} control={option} />\r\n        default:\r\n          return (\r\n            <div key={index} className=\"control\">{option.type} is not supported</div>\r\n          );\r\n      }\r\n    });\r\n  }\r\n  return (\r\n    <div id=\"menu-container\">\r\n      <div id=\"menu\">\r\n        <div className=\"none center\">\r\n          <span className=\"left\" onClick={onClickPrevious}>❮ PREV</span>\r\n          {title}\r\n          <span className=\"right\" onClick={onClickNext}>NEXT ❯</span>\r\n        </div>\r\n        <div>\r\n          {controls}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Menu;\r\n","const RECTANGLE = 1;\r\nconst CIRCLE = 2;\r\n\r\nexport function boundingRectangle(x1, y1, x2, y2) {\r\n  return {\r\n    type: RECTANGLE,\r\n    x1,\r\n    y1,\r\n    x2,\r\n    y2\r\n  };\r\n}\r\n\r\nexport function boundingCircle(cx, cy, radius) {\r\n  return {\r\n    type: CIRCLE,\r\n    cx,\r\n    cy,\r\n    radius\r\n  };\r\n}\r\n\r\nexport function collide(pri, sec) {\r\n  switch (pri.type) {\r\n    case RECTANGLE:\r\n      switch (sec.type) {\r\n        case RECTANGLE:\r\n          return collideRectangles(pri, sec);\r\n        case CIRCLE:\r\n          return collideCircleRectangle(sec, pri);\r\n        default:\r\n          throw new Error('cannot collide ' + pri.type + ' ' + sec.type);\r\n      }\r\n    case CIRCLE:\r\n      switch (sec.type) {\r\n        case RECTANGLE:\r\n          return collideCircleRectangle(pri, sec);\r\n        case CIRCLE:\r\n          return collideCircles(pri, sec);\r\n        default:\r\n          throw new Error('cannot collide ' + pri.type + ' ' + sec.type);\r\n      }\r\n    default:\r\n      throw new Error('cannot collide ' + pri.type + ' ' + sec.type);\r\n  }\r\n}\r\n\r\nfunction collideRectangles(rect1, rect2) {\r\n  if (rect1.x2 <= rect2.x1 || rect1.x1 >= rect2.x2 || rect1.y2 <= rect2.y1 || rect1.y1 >= rect2.y2) {\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\n\r\nfunction collideCircles(cir1, cir2) {\r\n  const dx = cir1.cx - cir2.cx;\r\n  const dy = cir1.cy - cir2.cy;\r\n  const distance = dx * dx + dy * dy;\r\n  const sr = cir1.radius + cir2.radius;\r\n  if (distance < sr * sr) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction collideCircleRectangle(cir, rect) {\r\n  let type = 0;\r\n  let testX = cir.cx;\r\n  let testY = cir.cy;\r\n  if (cir.cx < rect.x1) {\r\n    type |= 1;\r\n    testX = rect.x1;\r\n  } else if (cir.cx > rect.x2) {\r\n    type |= 1;\r\n    testX = rect.x2;\r\n  }\r\n  if (cir.cy < rect.y1) {\r\n    type |= 2;\r\n    testY = rect.y1;\r\n  } else if (cir.cy > rect.y2) {\r\n    type |= 2;\r\n    testY = rect.y2;\r\n  }\r\n  const distX = cir.cx - testX;\r\n  const distY = cir.cy - testY;\r\n  const distance = (distX * distX) + (distY * distY);\r\n  if (distance <= cir.radius * cir.radius) {\r\n    return type;\r\n  }\r\n  return 0;\r\n}\r\n","import { collide, boundingRectangle, boundingCircle } from '../lib/collision';\r\n\r\nlet state = {}\r\n\r\nlet applicationState = {};\r\n\r\nconst screen = {\r\n  x: 320,\r\n  y: 180\r\n};\r\n\r\nfunction adjustScale(width, height) {\r\n  state.width = width;\r\n  state.height = height;\r\n  state.scale = Math.min(width / screen.x, height / screen.y);\r\n  state.offsetX = (width - screen.x * state.scale) / 2;\r\n  state.offsetY = (height - screen.y * state.scale) / 2;\r\n}\r\n\r\nexport default function initialize(props) {\r\n  applicationState = props;\r\n  const { width, height } = applicationState;\r\n  state = {\r\n    gameOver: false,\r\n    frameCount: 0,\r\n    obstacles: [],\r\n    player: new PlayerComponent(15, 75, 15, 'red'),\r\n    score: new TextComponent(screen.x, 0, 'white', 'Consolas', 8, 'SCORE: 0'),\r\n    keyState: {}\r\n  };\r\n  adjustScale(width, height);\r\n  return {\r\n    name: 'dodge',\r\n    resize,\r\n    update,\r\n    render,\r\n    handleKeyDown,\r\n    handleKeyUp\r\n  };\r\n}\r\n\r\nfunction resize() {\r\n  const { width, height } = applicationState;\r\n  adjustScale(width, height);\r\n}\r\n\r\nfunction update() {\r\n  const { player, obstacles, score, keyState } = state;\r\n\r\n  if (!state.gameOver) {\r\n    state.frameCount++;\r\n\r\n    if ((state.frameCount % 150) === 1) {\r\n      const h = getRandomNumber(20, 100);\r\n      const gap = getRandomNumber(50, 100);\r\n      const w = Math.floor(state.width / state.scale);\r\n      obstacles.push(new ObstacleComponent(w, 0, 10, h, 'green'));\r\n      obstacles.push(new ObstacleComponent(w, h + gap, 10, screen.y - h - gap, 'green'));\r\n    }\r\n\r\n    player.update(keyState);\r\n\r\n    for (let i = 0; i < obstacles.length; i++) {\r\n      obstacles[i].update();\r\n    }\r\n\r\n    state.obstacles = obstacles.filter(x => x.onScreen);\r\n\r\n    score.text = 'SCORE: ' + state.frameCount;\r\n\r\n    const rect = player.getCollisionBounds();\r\n\r\n    for (let i = 0; i < obstacles.length; i += 1) {\r\n      if (collide(rect, obstacles[i].getCollisionBounds())) {\r\n        state.gameOver = true;\r\n      }\r\n    }\r\n\r\n    if (state.gameOver) {\r\n      applicationState.showMessage(['GAME OVER']);\r\n      applicationState.setOptions([\r\n        {\r\n          type: 'function',\r\n          name: 'RESTART',\r\n          function: reset\r\n        }\r\n      ]);\r\n    }\r\n  }\r\n}\r\n\r\nfunction render() {\r\n  const { ctx } = applicationState;\r\n  const { width, height, player, obstacles, score } = state;\r\n\r\n  ctx.clearRect(0, 0, width, height);\r\n\r\n  ctx.fillStyle = '#111';\r\n  ctx.fillRect(state.offsetX, state.offsetY, screen.x * state.scale, screen.y * state.scale);\r\n\r\n  ctx.save();\r\n  ctx.rect(state.offsetX, state.offsetY, screen.x * state.scale, screen.y * state.scale);\r\n  ctx.clip();\r\n\r\n  player.render(ctx);\r\n\r\n  for (let i = 0; i < obstacles.length; i += 1) {\r\n    obstacles[i].render(ctx);\r\n  }\r\n\r\n  score.render(ctx);\r\n\r\n  ctx.restore();\r\n}\r\n\r\nfunction reset() {\r\n  state.gameOver = false;\r\n  state.frameCount = 0;\r\n  state.obstacles = [];\r\n  state.player.x = 15;\r\n  state.player.y = 75;\r\n  applicationState.setOptions();\r\n}\r\n\r\nfunction handleKeyDown(event) {\r\n  state.keyState[event.code] = true;\r\n}\r\n\r\nfunction handleKeyUp(event) {\r\n  state.keyState[event.code] = false;\r\n}\r\n\r\nfunction getRandomNumber(min, max) {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\n\r\nclass TextComponent {\r\n  constructor(x, y, color, fontName, fontSize, text) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.color = color;\r\n    this.fontName = fontName;\r\n    this.fontSize = fontSize;\r\n    this.text = text;\r\n  }\r\n\r\n  render(ctx) {\r\n    ctx.font = (this.fontSize * state.scale).toFixed(0) + 'px ' + this.fontName;\r\n    ctx.fillStyle = this.color;\r\n    ctx.textAlign = 'right';\r\n    ctx.textBaseline = 'top';\r\n    let { x, y } = this;\r\n    x = x * state.scale + state.offsetX;\r\n    y = y * state.scale + state.offsetY;\r\n    ctx.fillText(this.text, x, y);\r\n  }\r\n}\r\n\r\nclass PlayerComponent {\r\n  constructor(x, y, radius, color) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.radius = radius;\r\n    this.color = color;\r\n    this.speedX = 0;\r\n    this.speedY = 0;\r\n  }\r\n\r\n  update(keyState) {\r\n    this.speedX = 0;\r\n    this.speedY = 0;\r\n\r\n    if (keyState['KeyW'] || keyState['ArrowUp']) {\r\n      this.speedY -= 1;\r\n    }\r\n\r\n    if (keyState['KeyS'] || keyState['ArrowDown']) {\r\n      this.speedY += 1;\r\n    }\r\n\r\n    if (keyState['KeyA'] || keyState['ArrowLeft']) {\r\n      this.speedX -= 1;\r\n    }\r\n\r\n    if (keyState['KeyD'] || keyState['ArrowRight']) {\r\n      this.speedX += 1;\r\n    }\r\n\r\n    this.x += this.speedX;\r\n    this.y += this.speedY;\r\n\r\n    if (this.x < this.radius) {\r\n      this.x = this.radius;\r\n    } else if (this.x + this.radius > screen.x) {\r\n      this.x = screen.x - this.radius;\r\n    }\r\n\r\n    if (this.y < this.radius) {\r\n      this.y = this.radius;\r\n    } else if (this.y + this.radius > screen.y) {\r\n      this.y = screen.y - this.radius;\r\n    }\r\n  }\r\n\r\n  render(ctx) {\r\n    ctx.fillStyle = this.color;\r\n    let { x, y, radius } = this;\r\n    x = x * state.scale + state.offsetX;\r\n    y = y * state.scale + state.offsetY;\r\n    radius *= state.scale;\r\n    ctx.beginPath();\r\n    ctx.arc(x, y, radius, 0, Math.PI * 2, true);\r\n    ctx.fill();\r\n  }\r\n\r\n  getCollisionBounds() {\r\n    return boundingCircle(this.x, this.y, this.radius);\r\n  }\r\n}\r\n\r\nclass ObstacleComponent {\r\n  constructor(x, y, width, height, color) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.width = width;\r\n    this.height = height;\r\n    this.color = color;\r\n    this.onScreen = true;\r\n  }\r\n\r\n  update() {\r\n    this.x--;\r\n    if (this.x + this.width <= 0) {\r\n      this.onScreen = false;\r\n    }\r\n  }\r\n\r\n  render(ctx) {\r\n    ctx.fillStyle = this.color;\r\n    let { x, y, width, height } = this;\r\n    x = x * state.scale + state.offsetX;\r\n    y = y * state.scale + state.offsetY;\r\n    width *= state.scale;\r\n    height *= state.scale;\r\n    ctx.fillRect(x, y, width, height);\r\n  }\r\n\r\n  getCollisionBounds() {\r\n    return boundingRectangle(this.x, this.y, this.x + this.width, this.y + this.height);\r\n  }\r\n}\r\n","let state = {}\r\n\r\nlet applicationState = {};\r\n\r\nexport default function initialize(props) {\r\n  applicationState = props;\r\n  const { ctx, width, height } = applicationState;\r\n  state = {\r\n    size: 1,\r\n    width,\r\n    height,\r\n    image: ctx.createImageData(width, height),\r\n    keyState: {}\r\n  };\r\n  return {\r\n    name: 'noise',\r\n    resize,\r\n    update,\r\n    render,\r\n    handleKeyDown,\r\n    handleKeyUp\r\n  };\r\n}\r\n\r\nfunction resize() {\r\n  const { ctx, width, height } = applicationState;\r\n  state.width = width;\r\n  state.height = height;\r\n  state.image = ctx.createImageData(width, height);\r\n}\r\n\r\nfunction update() {\r\n  const { size, width, height, keyState } = state;\r\n\r\n  if (keyState['ArrowDown']) {\r\n    if (state.size > 1) {\r\n      state.size--;\r\n    }\r\n  }\r\n\r\n  if (keyState['ArrowUp']) {\r\n    if (state.size < 100) {\r\n      state.size++;\r\n    }\r\n  }\r\n\r\n  const buffer = state.image.data;\r\n\r\n  for (let y = 0; y < height; y += size) {\r\n    for (let x = 0; x < width; x += size) {\r\n      const color = Math.floor(Math.random() * 256);\r\n      for (let dy = y; dy < Math.min(y + size, height); dy++) {\r\n        for (let dx = x; dx < Math.min(x + size, width); dx++) {\r\n          const pos = (dy * width + dx) * 4;\r\n          buffer[pos] = color;\r\n          buffer[pos + 1] = color;\r\n          buffer[pos + 2] = color;\r\n          buffer[pos + 3] = 255;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction render() {\r\n  const { ctx } = applicationState;\r\n  ctx.putImageData(state.image, 0, 0);\r\n}\r\n\r\nfunction handleKeyDown(event) {\r\n  state.keyState[event.code] = true;\r\n}\r\n\r\nfunction handleKeyUp(event) {\r\n  state.keyState[event.code] = false;\r\n}","import React from 'react';\r\nimport Message from './Message';\r\nimport Menu from './Menu';\r\nimport asteroids from '../games/asteroids';\r\nimport dodge from '../games/dodge';\r\nimport noise from '../games/noise';\r\n\r\nconst games = [asteroids, dodge, noise];\r\n\r\nlet gameIndex = 0;\r\n\r\nlet gameState = {};\r\n\r\nconst state = {\r\n  totalFrameTime: 0,\r\n  frameCount: 0,\r\n  paused: false,\r\n  showFrameTime: false\r\n};\r\n\r\nconst sharedState = {\r\n  ctx: null,\r\n  deltaTime: 0,\r\n  width: 0,\r\n  height: 0\r\n};\r\n\r\nfunction App() {\r\n  const canvasRef = React.useRef(null);\r\n  const requestRef = React.useRef(null);\r\n  const previousTimeRef = React.useRef(0);\r\n\r\n  const [, setUpdate] = React.useState(0);\r\n  const [message, setMessage] = React.useState();\r\n  const [title, setTitle] = React.useState();\r\n  const [options, setOptions] = React.useState();\r\n\r\n  function previousScene() {\r\n    if (gameState.handleExit) {\r\n      gameState.handleExit();\r\n    }\r\n    gameIndex = (gameIndex + games.length - 1) % games.length;\r\n    gameState = games[gameIndex](sharedState);\r\n    setTitle(gameState.name);\r\n    setOptions(gameState.options);\r\n    state.totalFrameTime = 0;\r\n    state.frameCount = 0;\r\n  }\r\n\r\n  function nextScene() {\r\n    if (gameState.handleExit) {\r\n      gameState.handleExit();\r\n    }\r\n    gameIndex = (gameIndex + 1) % games.length;\r\n    gameState = games[gameIndex](sharedState);\r\n    setTitle(gameState.name);\r\n    setOptions(gameState.options);\r\n    state.totalFrameTime = 0;\r\n    state.frameCount = 0;\r\n  }\r\n\r\n  const onClickMessage = (event) => {\r\n    event.preventDefault();\r\n    if (state.messageTimer) {\r\n      cancelMessage();\r\n    }\r\n  };\r\n\r\n  const showMessage = (message) => {\r\n    setMessage(message);\r\n    state.messageTimer = setTimeout(clearMessage, 10000);\r\n  }\r\n\r\n  const clearMessage = () => {\r\n    setMessage();\r\n    state.messageTimer = undefined;\r\n  }\r\n\r\n  const cancelMessage = React.useCallback(() => {\r\n    clearTimeout(state.messageTimer);\r\n    clearMessage();\r\n  }, []);\r\n\r\n  sharedState.showMessage = showMessage;\r\n  sharedState.setOptions = setOptions;\r\n  sharedState.pause = () => { state.paused = true };\r\n  sharedState.unpause = () => { state.paused = false };\r\n\r\n  const forceUpdate = React.useCallback(() => { setUpdate(x => x + 1); }, []);\r\n\r\n  const handleKeyDown = React.useCallback((event) => {\r\n    if (event.code === 'PageDown') {\r\n      event.preventDefault();\r\n      nextScene();\r\n    } else if (event.code === 'PageUp') {\r\n      event.preventDefault();\r\n      previousScene();\r\n    } else if (event.code === 'Escape') {\r\n      event.preventDefault();\r\n      state.paused = !state.paused;\r\n      if (gameState.handlePause) {\r\n        gameState.handlePause(state.paused);\r\n      }\r\n      cancelMessage();\r\n      forceUpdate();\r\n    }\r\n    else {\r\n      if (gameState.handleKeyDown) {\r\n        gameState.handleKeyDown(event);\r\n      }\r\n    }\r\n  }, [forceUpdate, cancelMessage]);\r\n\r\n  const handleKeyUp = (event) => {\r\n    if (gameState.handleKeyUp) {\r\n      gameState.handleKeyUp(event);\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const rect = canvas.getBoundingClientRect()\r\n    sharedState.ctx = canvas.getContext('2d');\r\n    sharedState.width = rect.width * window.devicePixelRatio;\r\n    sharedState.height = rect.height * window.devicePixelRatio;\r\n\r\n    gameState = games[gameIndex](sharedState);\r\n    setTitle(gameState.name);\r\n    setOptions(gameState.options);\r\n\r\n    const animate = currentTime => {\r\n      if (previousTimeRef.current !== undefined) {\r\n        sharedState.deltaTime = currentTime - previousTimeRef.current;\r\n\r\n        const rect = canvas.getBoundingClientRect();\r\n        canvas.width = rect.width * window.devicePixelRatio;\r\n        canvas.height = rect.height * window.devicePixelRatio;\r\n\r\n        if (canvas.width !== sharedState.width || canvas.height !== sharedState.height) {\r\n          state.totalFrameTime = 0;\r\n          state.frameCount = 0;\r\n          sharedState.width = canvas.width;\r\n          sharedState.height = canvas.height;\r\n\r\n          if (gameState.resize) {\r\n            gameState.resize();\r\n          }\r\n        }\r\n\r\n        const t0 = performance.now();\r\n\r\n        if (gameState.update && !state.paused) {\r\n          gameState.update();\r\n        }\r\n\r\n        if (gameState.render) {\r\n          gameState.render();\r\n        }\r\n\r\n        const t1 = performance.now();\r\n\r\n        state.totalFrameTime += t1 - t0;\r\n        state.frameCount++;\r\n\r\n        if (state.showFrameTime) {\r\n          drawFrameTime();\r\n        }\r\n      }\r\n\r\n      previousTimeRef.current = currentTime;\r\n      requestRef.current = requestAnimationFrame(animate);\r\n    }\r\n\r\n    window.addEventListener('keydown', handleKeyDown);\r\n    window.addEventListener('keyup', handleKeyUp);\r\n\r\n    requestRef.current = requestAnimationFrame(animate);\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n      window.removeEventListener('keyup', handleKeyUp);\r\n      cancelAnimationFrame(requestRef.current);\r\n    }\r\n  }, [canvasRef, handleKeyDown]);\r\n\r\n  const onChange = (option, value) => {\r\n    if (value !== option.value) {\r\n      gameState.setOption(option, value);\r\n      forceUpdate();\r\n    }\r\n  };\r\n\r\n  const onClickPrevious = (event) => {\r\n    event.preventDefault();\r\n    nextScene();\r\n  };\r\n\r\n  const onClickNext = (event) => {\r\n    event.preventDefault();\r\n    previousScene();\r\n  };\r\n\r\n  return (\r\n    <div className=\"screen\">\r\n      <canvas id=\"canvas\" ref={canvasRef}></canvas>\r\n      <Message message={message} onClick={onClickMessage} />\r\n      <Menu show={state.paused} onClickPrevious={onClickPrevious} onClickNext={onClickNext} onChange={onChange} title={title} options={options} />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction drawFrameTime() {\r\n  const { totalFrameTime, frameCount } = state;\r\n  const { ctx, width } = sharedState;\r\n  const text = gameState.name + ' (' + (totalFrameTime / frameCount).toFixed(2) + ' ms)';\r\n  ctx.fillStyle = 'white';\r\n  ctx.font = '20px monospace';\r\n  ctx.textAlign = 'center';\r\n  ctx.textBaseline = 'top';\r\n  ctx.shadowOffsetX = 1;\r\n  ctx.shadowOffsetY = 1;\r\n  ctx.shadowColor = 'rgba(0.2,0.2,0.2,1.0)';\r\n  ctx.shadowBlur = 4;\r\n  ctx.fillText(text, width / 2, 0);\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}