{"version":3,"sources":["lib/collision.js","games/dodge.js","games/noise.js","components/App.js","serviceWorker.js","index.js"],"names":["collide","pri","sec","type","rect1","rect2","x2","x1","y2","y1","collideRectangles","collideCircleRectangle","Error","cir1","cir2","dx","cx","dy","cy","distance","sr","radius","collideCircles","cir","rect","testX","testY","distX","distY","state","applicationState","screen","adjustScale","width","height","scale","Math","min","offsetX","offsetY","resize","update","player","obstacles","score","keyState","gameOver","frameCount","h","getRandomNumber","gap","w","floor","push","ObstacleComponent","i","length","filter","x","onScreen","text","getCollisionBounds","render","ctx","clearRect","fillStyle","fillRect","save","clip","restore","handleKeyDown","event","code","handleKeyUp","max","random","TextComponent","y","color","fontName","fontSize","this","font","toFixed","textAlign","textBaseline","fillText","PlayerComponent","speedX","speedY","beginPath","arc","PI","fill","image","createImageData","size","buffer","data","pos","putImageData","games","props","name","gameIndex","gameState","totalFrameTime","paused","sharedState","deltaTime","preventDefault","App","canvasRef","React","useRef","requestRef","previousTimeRef","useEffect","canvas","current","getBoundingClientRect","getContext","window","devicePixelRatio","addEventListener","requestAnimationFrame","animate","currentTime","undefined","t0","performance","now","t1","shadowOffsetX","shadowOffsetY","shadowColor","shadowBlur","drawFrameTime","removeEventListener","cancelAnimationFrame","className","id","ref","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.79caaf46.chunk.js","sourcesContent":["const RECTANGLE = 1;\r\nconst CIRCLE = 2;\r\n\r\nexport function boundingRectangle(x1, y1, x2, y2) {\r\n  return {\r\n    type: RECTANGLE,\r\n    x1,\r\n    y1,\r\n    x2,\r\n    y2\r\n  };\r\n}\r\n\r\nexport function boundingCircle(cx, cy, radius) {\r\n  return {\r\n    type: CIRCLE,\r\n    cx,\r\n    cy,\r\n    radius\r\n  };\r\n}\r\n\r\nexport function collide(pri, sec) {\r\n  switch (pri.type) {\r\n    case RECTANGLE:\r\n      switch (sec.type) {\r\n        case RECTANGLE:\r\n          return collideRectangles(pri, sec);\r\n        case CIRCLE:\r\n          return collideCircleRectangle(sec, pri);\r\n        default:\r\n          throw new Error('cannot collide ' + pri.type + ' ' + sec.type);\r\n      }\r\n    case CIRCLE:\r\n      switch (sec.type) {\r\n        case RECTANGLE:\r\n          return collideCircleRectangle(pri, sec);\r\n        case CIRCLE:\r\n          return collideCircles(pri, sec);\r\n        default:\r\n          throw new Error('cannot collide ' + pri.type + ' ' + sec.type);\r\n      }\r\n    default:\r\n      throw new Error('cannot collide ' + pri.type + ' ' + sec.type);\r\n  }\r\n}\r\n\r\nfunction collideRectangles(rect1, rect2) {\r\n  if (rect1.x2 <= rect2.x1 || rect1.x1 >= rect2.x2 || rect1.y2 <= rect2.y1 || rect1.y1 >= rect2.y2) {\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\n\r\nfunction collideCircles(cir1, cir2) {\r\n  const dx = cir1.cx - cir2.cx;\r\n  const dy = cir1.cy - cir2.cy;\r\n  const distance = dx * dx + dy * dy;\r\n  const sr = cir1.radius + cir2.radius;\r\n  if (distance < sr * sr) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction collideCircleRectangle(cir, rect) {\r\n  let type = 0;\r\n  let testX = cir.cx;\r\n  let testY = cir.cy;\r\n  if (cir.cx < rect.x1) {\r\n    type |= 1;\r\n    testX = rect.x1;\r\n  } else if (cir.cx > rect.x2) {\r\n    type |= 1;\r\n    testX = rect.x2;\r\n  }\r\n  if (cir.cy < rect.y1) {\r\n    type |= 2;\r\n    testY = rect.y1;\r\n  } else if (cir.cy > rect.y2) {\r\n    type |= 2;\r\n    testY = rect.y2;\r\n  }\r\n  const distX = cir.cx - testX;\r\n  const distY = cir.cy - testY;\r\n  const distance = (distX * distX) + (distY * distY);\r\n  if (distance <= cir.radius * cir.radius) {\r\n    return type;\r\n  }\r\n  return 0;\r\n}\r\n","import { collide, boundingRectangle, boundingCircle } from '../lib/collision';\r\n\r\nlet state = {}\r\n\r\nlet applicationState = {};\r\n\r\nconst screen = {\r\n  x: 320,\r\n  y: 180\r\n};\r\n\r\nfunction adjustScale(width, height) {\r\n  state.width = width;\r\n  state.height = height;\r\n  state.scale = Math.min(width / screen.x, height / screen.y);\r\n  state.offsetX = (width - screen.x * state.scale) / 2;\r\n  state.offsetY = (height - screen.y * state.scale) / 2;\r\n}\r\n\r\nexport default function initialize(props) {\r\n  applicationState = props;\r\n  const { width, height } = applicationState;\r\n  state = {\r\n    gameOver: false,\r\n    frameCount: 0,\r\n    obstacles: [],\r\n    player: new PlayerComponent(15, 75, 15, 'red'),\r\n    score: new TextComponent(screen.x, 0, 'white', 'Consolas', 15, 'SCORE: 0'),\r\n    keyState: {}\r\n  };\r\n  adjustScale(width, height);\r\n  return {\r\n    name: 'dodge',\r\n    resize,\r\n    update,\r\n    render,\r\n    handleKeyDown,\r\n    handleKeyUp\r\n  };\r\n}\r\n\r\nfunction resize() {\r\n  const { width, height } = applicationState;\r\n  adjustScale(width, height);\r\n}\r\n\r\nfunction update() {\r\n  const { player, obstacles, score, keyState } = state;\r\n\r\n  if (!state.gameOver) {\r\n    state.frameCount++;\r\n\r\n    if ((state.frameCount % 150) === 1) {\r\n      const h = getRandomNumber(20, 100);\r\n      const gap = getRandomNumber(50, 100);\r\n      const w = Math.floor(state.width / state.scale);\r\n      obstacles.push(new ObstacleComponent(w, 0, 10, h, 'green'));\r\n      obstacles.push(new ObstacleComponent(w, h + gap, 10, screen.y - h - gap, 'green'));\r\n    }\r\n\r\n    player.update(keyState);\r\n\r\n    for (let i = 0; i < obstacles.length; i++) {\r\n      obstacles[i].update();\r\n    }\r\n\r\n    state.obstacles = obstacles.filter(x => x.onScreen);\r\n\r\n    score.text = 'SCORE: ' + state.frameCount;\r\n\r\n    const rect = player.getCollisionBounds();\r\n\r\n    for (let i = 0; i < obstacles.length; i += 1) {\r\n      if (collide(rect, obstacles[i].getCollisionBounds())) {\r\n        state.gameOver = true;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction render() {\r\n  const { ctx } = applicationState;\r\n  const { width, height, player, obstacles, score } = state;\r\n\r\n  ctx.clearRect(0, 0, width, height);\r\n\r\n  ctx.fillStyle = '#111';\r\n  ctx.fillRect(state.offsetX, state.offsetY, screen.x * state.scale, screen.y * state.scale);\r\n\r\n  ctx.save();\r\n  ctx.rect(state.offsetX, state.offsetY, screen.x * state.scale, screen.y * state.scale);\r\n  ctx.clip();\r\n\r\n  player.render(ctx);\r\n\r\n  for (let i = 0; i < obstacles.length; i += 1) {\r\n    obstacles[i].render(ctx);\r\n  }\r\n\r\n  score.render(ctx);\r\n\r\n  ctx.restore();\r\n}\r\n\r\nfunction handleKeyDown(event) {\r\n  state.keyState[event.code] = true;\r\n}\r\n\r\nfunction handleKeyUp(event) {\r\n  state.keyState[event.code] = false;\r\n}\r\n\r\nfunction getRandomNumber(min, max) {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\n\r\nclass TextComponent {\r\n  constructor(x, y, color, fontName, fontSize, text) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.color = color;\r\n    this.fontName = fontName;\r\n    this.fontSize = fontSize;\r\n    this.text = text;\r\n  }\r\n\r\n  render(ctx) {\r\n    ctx.font = (this.fontSize * state.scale).toFixed(0) + 'px ' + this.fontName;\r\n    ctx.fillStyle = this.color;\r\n    ctx.textAlign = 'right';\r\n    ctx.textBaseline = 'top';\r\n    let { x, y } = this;\r\n    x = x * state.scale + state.offsetX;\r\n    y = y * state.scale + state.offsetY;\r\n    ctx.fillText(this.text, x, y);\r\n  }\r\n}\r\n\r\nclass PlayerComponent {\r\n  constructor(x, y, radius, color) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.radius = radius;\r\n    this.color = color;\r\n    this.speedX = 0;\r\n    this.speedY = 0;\r\n  }\r\n\r\n  update(keyState) {\r\n    this.speedX = 0;\r\n    this.speedY = 0;\r\n\r\n    if (keyState['KeyW'] || keyState['ArrowUp']) {\r\n      this.speedY -= 1;\r\n    }\r\n\r\n    if (keyState['KeyS'] || keyState['ArrowDown']) {\r\n      this.speedY += 1;\r\n    }\r\n\r\n    if (keyState['KeyA'] || keyState['ArrowLeft']) {\r\n      this.speedX -= 1;\r\n    }\r\n\r\n    if (keyState['KeyD'] || keyState['ArrowRight']) {\r\n      this.speedX += 1;\r\n    }\r\n\r\n    this.x += this.speedX;\r\n    this.y += this.speedY;\r\n\r\n    if (this.x < this.radius) {\r\n      this.x = this.radius;\r\n    } else if (this.x + this.radius > screen.x) {\r\n      this.x = screen.x - this.radius;\r\n    }\r\n\r\n    if (this.y < this.radius) {\r\n      this.y = this.radius;\r\n    } else if (this.y + this.radius > screen.y) {\r\n      this.y = screen.y - this.radius;\r\n    }\r\n  }\r\n\r\n  render(ctx) {\r\n    ctx.fillStyle = this.color;\r\n    let { x, y, radius } = this;\r\n    x = x * state.scale + state.offsetX;\r\n    y = y * state.scale + state.offsetY;\r\n    radius *= state.scale;\r\n    ctx.beginPath();\r\n    ctx.arc(x, y, radius, 0, Math.PI * 2, true);\r\n    ctx.fill();\r\n  }\r\n\r\n  getCollisionBounds() {\r\n    return boundingCircle(this.x, this.y, this.radius);\r\n  }\r\n}\r\n\r\nclass ObstacleComponent {\r\n  constructor(x, y, width, height, color) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.width = width;\r\n    this.height = height;\r\n    this.color = color;\r\n    this.onScreen = true;\r\n  }\r\n\r\n  update() {\r\n    this.x--;\r\n    if (this.x + this.width <= 0) {\r\n      this.onScreen = false;\r\n    }\r\n  }\r\n\r\n  render(ctx) {\r\n    ctx.fillStyle = this.color;\r\n    let { x, y, width, height } = this;\r\n    x = x * state.scale + state.offsetX;\r\n    y = y * state.scale + state.offsetY;\r\n    width *= state.scale;\r\n    height *= state.scale;\r\n    ctx.fillRect(x, y, width, height);\r\n  }\r\n\r\n  getCollisionBounds() {\r\n    return boundingRectangle(this.x, this.y, this.x + this.width, this.y + this.height);\r\n  }\r\n}\r\n","let state = {}\r\n\r\nlet applicationState = {};\r\n\r\nexport default function initialize(props) {\r\n  applicationState = props;\r\n  const { ctx, width, height } = applicationState;\r\n  state = {\r\n    size: 1,\r\n    width,\r\n    height,\r\n    image: ctx.createImageData(width, height),\r\n    keyState: {}\r\n  };\r\n  return {\r\n    name: 'noise',\r\n    resize,\r\n    update,\r\n    render,\r\n    handleKeyDown,\r\n    handleKeyUp\r\n  };\r\n}\r\n\r\nfunction resize() {\r\n  const { ctx, width, height } = applicationState;\r\n  state.width = width;\r\n  state.height = height;\r\n  state.image = ctx.createImageData(width, height);\r\n}\r\n\r\nfunction update() {\r\n  const { size, width, height, keyState } = state;\r\n\r\n  if (keyState['ArrowDown']) {\r\n    if (state.size > 1) {\r\n      state.size--;\r\n    }\r\n  }\r\n\r\n  if (keyState['ArrowUp']) {\r\n    if (state.size < 100) {\r\n      state.size++;\r\n    }\r\n  }\r\n\r\n  const buffer = state.image.data;\r\n\r\n  for (let y = 0; y < height; y += size) {\r\n    for (let x = 0; x < width; x += size) {\r\n      const color = Math.floor(Math.random() * 256);\r\n      for (let dy = y; dy < Math.min(y + size, height); dy++) {\r\n        for (let dx = x; dx < Math.min(x + size, width); dx++) {\r\n          const pos = (dy * width + dx) * 4;\r\n          buffer[pos] = color;\r\n          buffer[pos + 1] = color;\r\n          buffer[pos + 2] = color;\r\n          buffer[pos + 3] = 255;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction render() {\r\n  const { ctx } = applicationState;\r\n  ctx.putImageData(state.image, 0, 0);\r\n}\r\n\r\nfunction handleKeyDown(event) {\r\n  state.keyState[event.code] = true;\r\n}\r\n\r\nfunction handleKeyUp(event) {\r\n  state.keyState[event.code] = false;\r\n}","import React from 'react';\r\nimport dodge from '../games/dodge';\r\nimport noise from '../games/noise';\r\n\r\nconst games = [dodge, noise];\r\n\r\nlet gameIndex = 0;\r\n\r\nlet gameState = {};\r\n\r\nconst state = {\r\n  totalFrameTime: 0,\r\n  frameCount: 0,\r\n  paused: true\r\n};\r\n\r\nconst sharedState = {\r\n  ctx: null,\r\n  deltaTime: 0,\r\n  width: 0,\r\n  height: 0\r\n};\r\n\r\nfunction App() {\r\n  const canvasRef = React.useRef(null);\r\n  const requestRef = React.useRef(null);\r\n  const previousTimeRef = React.useRef(0);\r\n\r\n  React.useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const rect = canvas.getBoundingClientRect()\r\n    sharedState.ctx = canvas.getContext('2d');\r\n    sharedState.width = rect.width * window.devicePixelRatio;\r\n    sharedState.height = rect.height * window.devicePixelRatio;\r\n\r\n    gameState = games[gameIndex](sharedState);\r\n\r\n    const animate = currentTime => {\r\n      if (previousTimeRef.current !== undefined) {\r\n        sharedState.deltaTime = currentTime - previousTimeRef.current;\r\n\r\n        const rect = canvas.getBoundingClientRect();\r\n        canvas.width = rect.width * window.devicePixelRatio;\r\n        canvas.height = rect.height * window.devicePixelRatio;\r\n\r\n        if (canvas.width !== sharedState.width || canvas.height !== sharedState.height) {\r\n          state.totalFrameTime = 0;\r\n          state.frameCount = 0;\r\n          sharedState.width = canvas.width;\r\n          sharedState.height = canvas.height;\r\n\r\n          if (gameState.resize) {\r\n            gameState.resize();\r\n          }\r\n        }\r\n\r\n        const t0 = performance.now();\r\n\r\n        if (gameState.update && !state.paused) {\r\n          gameState.update();\r\n        }\r\n\r\n        if (gameState.render) {\r\n          gameState.render();\r\n        }\r\n\r\n        const t1 = performance.now();\r\n\r\n        state.totalFrameTime += t1 - t0;\r\n        state.frameCount++;\r\n\r\n        drawFrameTime();\r\n      }\r\n\r\n      previousTimeRef.current = currentTime;\r\n      requestRef.current = requestAnimationFrame(animate);\r\n    }\r\n\r\n    window.addEventListener('keydown', handleKeyDown);\r\n    window.addEventListener('keyup', handleKeyUp);\r\n\r\n    requestRef.current = requestAnimationFrame(animate);\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n      window.removeEventListener('keyup', handleKeyUp);\r\n      cancelAnimationFrame(requestRef.current);\r\n    }\r\n  }, [canvasRef]);\r\n\r\n  return (\r\n    <div className=\"screen\">\r\n      <canvas id=\"canvas\" ref={canvasRef}></canvas>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction handleKeyDown(event) {\r\n  if (event.code === 'PageDown') {\r\n    event.preventDefault();\r\n    nextScene();\r\n  } else if (event.code === 'PageUp') {\r\n    event.preventDefault();\r\n    previousScene();\r\n  } else if (event.code === 'Escape') {\r\n    event.preventDefault();\r\n    state.paused = !state.paused;\r\n  }\r\n  else {\r\n    if (gameState.handleKeyDown) {\r\n      gameState.handleKeyDown(event);\r\n    }\r\n  }\r\n}\r\n\r\nfunction handleKeyUp(event) {\r\n  if (gameState.handleKeyUp) {\r\n    gameState.handleKeyUp(event);\r\n  }\r\n}\r\n\r\nfunction drawFrameTime() {\r\n  const { totalFrameTime, frameCount } = state;\r\n  const { ctx, width } = sharedState;\r\n  const text = gameState.name + ' (' + (totalFrameTime / frameCount).toFixed(2) + ' ms)';\r\n  ctx.fillStyle = 'white';\r\n  ctx.font = '20px monospace';\r\n  ctx.textAlign = 'center';\r\n  ctx.textBaseline = 'top';\r\n  ctx.shadowOffsetX = 1;\r\n  ctx.shadowOffsetY = 1;\r\n  ctx.shadowColor = 'rgba(0.2,0.2,0.2,1.0)';\r\n  ctx.shadowBlur = 4;\r\n  ctx.fillText(text, width / 2, 0);\r\n}\r\n\r\nfunction previousScene() {\r\n  gameIndex = (gameIndex + games.length - 1) % games.length;\r\n  gameState = games[gameIndex](sharedState);\r\n  state.totalFrameTime = 0;\r\n  state.frameCount = 0;\r\n}\r\n\r\nfunction nextScene() {\r\n  gameIndex = (gameIndex + 1) % games.length;\r\n  gameState = games[gameIndex](sharedState);\r\n  state.totalFrameTime = 0;\r\n  state.frameCount = 0;\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}