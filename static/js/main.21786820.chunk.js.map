{"version":3,"sources":["games/dodge.js","lib/collision.js","games/noise.js","App.js","serviceWorker.js","index.js"],"names":["state","resize","width","height","scaleX","Math","floor","scaleY","update","r1","r2","player","obstacles","score","keyState","paused","frameCount","h","getRandomNumber","gap","w","push","ObstacleComponent","i","length","text","rect","getRectangle","x2","x1","y2","y1","render","ctx","clearRect","handleKeyDown","event","code","handleKeyUp","min","max","random","TextComponent","x","y","color","fontName","fontSize","this","font","toFixed","fillStyle","fillText","PlayerComponent","speedX","speedY","fillRect","image","createImageData","size","buffer","data","dy","dx","pos","putImageData","keyCode","games","name","gameIndex","props","totalFrameTime","deltaTime","handleClick","preventDefault","App","canvasRef","React","useRef","requestRef","previousTimeRef","useEffect","canvas","current","getBoundingClientRect","getContext","window","devicePixelRatio","addEventListener","requestAnimationFrame","animate","currentTime","undefined","t0","performance","now","t1","textAlign","textBaseline","shadowOffsetX","shadowOffsetY","shadowColor","shadowBlur","drawFrameTime","removeEventListener","cancelAnimationFrame","className","ref","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"iNAEA,IAAIA,EAAQ,GAyBZ,SAASC,EAAT,GAAoC,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,OACvBH,EAAME,MAAQA,EACdF,EAAMG,OAASA,EACfH,EAAMI,OAASC,KAAKC,MAAMJ,EAAQ,KAClCF,EAAMO,OAASF,KAAKC,MAAMH,EAAS,KAGrC,SAASK,IAAU,IClCeC,EAAIC,EDkCpB,EAC+BV,EAAvCW,EADQ,EACRA,OAAQC,EADA,EACAA,UAAWC,EADX,EACWA,MAAOC,EADlB,EACkBA,SAElC,IAAKd,EAAMe,OAAQ,CAGjB,GAFAf,EAAMgB,aAEDhB,EAAMgB,WAAa,MAAS,EAAG,CAClC,IAAMC,EAAIC,EAAgB,GAAI,KACxBC,EAAMD,EAAgB,GAAI,KAC1BE,EAAIf,KAAKC,MAAMN,EAAME,MAAQF,EAAMI,QACzCQ,EAAUS,KAAK,IAAIC,EAAkBF,EAAG,EAAG,GAAIH,EAAG,UAClDL,EAAUS,KAAK,IAAIC,EAAkBF,EAAGH,EAAIE,EAAK,GAAIC,EAAIH,EAAIE,EAAK,UAGpER,EAAOH,OAAOM,GAEd,IAAK,IAAIS,EAAI,EAAGA,EAAIX,EAAUY,OAAQD,IACpCX,EAAUW,GAAGf,SAGfK,EAAMY,KAAO,UAAYzB,EAAMgB,WAI/B,IAFA,IAAMU,EAAOf,EAAOgB,eAEXJ,EAAI,EAAGA,EAAIX,EAAUY,OAAQD,GAAK,EC1Dbd,ED2DNiB,EC3DUhB,ED2DJE,EAAUW,GAAGI,eC1DzClB,EAAGmB,IAAMlB,EAAGmB,IAAMpB,EAAGoB,IAAMnB,EAAGkB,IAAMnB,EAAGqB,IAAMpB,EAAGqB,IAAMtB,EAAGsB,IAAMrB,EAAGoB,KD2DhE9B,EAAMe,QAAS,IAMvB,SAASiB,EAAT,GAA0B,IAARC,EAAO,EAAPA,IAAO,EAC6BjC,EAA5CE,EADe,EACfA,MAAOC,EADQ,EACRA,OAAQQ,EADA,EACAA,OAAQC,EADR,EACQA,UAAWC,EADnB,EACmBA,MAE1CoB,EAAIC,UAAU,EAAG,EAAGhC,EAAOC,GAE3BQ,EAAOqB,OAAOC,GAEd,IAAK,IAAIV,EAAI,EAAGA,EAAIX,EAAUY,OAAQD,GAAK,EACzCX,EAAUW,GAAGS,OAAOC,GAGtBpB,EAAMmB,OAAOC,GAGf,SAASE,EAAcC,GACrBpC,EAAMc,SAASsB,EAAMC,OAAQ,EAG/B,SAASC,EAAYF,GACnBpC,EAAMc,SAASsB,EAAMC,OAAQ,EAG/B,SAASnB,EAAgBqB,EAAKC,GAC5B,OAAOnC,KAAKC,MAAMD,KAAKoC,UAAYD,EAAMD,EAAM,GAAKA,G,IAGhDG,E,WACJ,WAAYC,EAAGC,EAAGC,EAAOC,EAAUC,EAAUtB,GAAO,oBAClDuB,KAAKL,EAAIA,EACTK,KAAKJ,EAAIA,EACTI,KAAKH,MAAQA,EACbG,KAAKF,SAAWA,EAChBE,KAAKD,SAAWA,EAChBC,KAAKvB,KAAOA,E,mDAGPQ,GACLA,EAAIgB,MAAQD,KAAKD,SAAW1C,KAAKkC,IAAIvC,EAAMI,OAAQJ,EAAMO,SAAS2C,QAAQ,GAAK,MAAQF,KAAKF,SAC5Fb,EAAIkB,UAAYH,KAAKH,MACrBZ,EAAImB,SAASJ,KAAKvB,KAAMuB,KAAKL,EAAI3C,EAAMI,OAAQ4C,KAAKJ,EAAI5C,EAAMO,Y,KAI5D8C,E,WACJ,WAAYV,EAAGC,EAAG1C,EAAOC,EAAQ0C,GAAQ,oBACvCG,KAAK9C,MAAQA,EACb8C,KAAK7C,OAASA,EACd6C,KAAKL,EAAIA,EACTK,KAAKJ,EAAIA,EACTI,KAAKH,MAAQA,EACbG,KAAKM,OAAS,EACdN,KAAKO,OAAS,E,mDAGTzC,GACLkC,KAAKM,OAAS,EACdN,KAAKO,OAAS,GAEVzC,EAAQ,MAAYA,EAAQ,WAC9BkC,KAAKO,QAAU,IAGbzC,EAAQ,MAAYA,EAAQ,aAC9BkC,KAAKO,QAAU,IAGbzC,EAAQ,MAAYA,EAAQ,aAC9BkC,KAAKM,QAAU,IAGbxC,EAAQ,MAAYA,EAAQ,cAC9BkC,KAAKM,QAAU,GAGjBN,KAAKL,GAAKK,KAAKM,OACfN,KAAKJ,GAAKI,KAAKO,S,6BAGVtB,GACLA,EAAIkB,UAAYH,KAAKH,MACrBZ,EAAIuB,SAASR,KAAKL,EAAI3C,EAAMI,OAAQ4C,KAAKJ,EAAI5C,EAAMO,OAAQyC,KAAK9C,MAAQF,EAAMI,OAAQ4C,KAAK7C,OAASH,EAAMO,U,qCAI1G,MAAO,CACLsB,GAAImB,KAAKL,EACTZ,GAAIiB,KAAKJ,EACThB,GAAIoB,KAAKL,EAAIK,KAAK9C,MAClB4B,GAAIkB,KAAKJ,EAAII,KAAK7C,Y,KAKlBmB,E,WACJ,WAAYqB,EAAGC,EAAG1C,EAAOC,EAAQ0C,GAAQ,oBACvCG,KAAKL,EAAIA,EACTK,KAAKJ,EAAIA,EACTI,KAAK9C,MAAQA,EACb8C,KAAK7C,OAASA,EACd6C,KAAKH,MAAQA,E,qDAKb,OADAG,KAAKL,MACDK,KAAKL,EAAIK,KAAK9C,OAAS,K,6BAMtB+B,GACLA,EAAIkB,UAAYH,KAAKH,MACrBZ,EAAIuB,SAASR,KAAKL,EAAI3C,EAAMI,OAAQ4C,KAAKJ,EAAI5C,EAAMO,OAAQyC,KAAK9C,MAAQF,EAAMI,OAAQ4C,KAAK7C,OAASH,EAAMO,U,qCAI1G,MAAO,CACLsB,GAAImB,KAAKL,EACTZ,GAAIiB,KAAKJ,EACThB,GAAIoB,KAAKL,EAAIK,KAAK9C,MAClB4B,GAAIkB,KAAKJ,EAAII,KAAK7C,Y,KE1LpBH,EAAQ,GAiBZ,SAASC,EAAT,GAAyC,IAAvBgC,EAAsB,EAAtBA,IAAK/B,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,OAC5BH,EAAME,MAAQA,EACdF,EAAMG,OAASA,EACfH,EAAMyD,MAAQxB,EAAIyB,gBAAgBxD,EAAOC,GAG3C,SAAS6B,EAAT,GAIE,IAJwB,IAARC,EAAO,EAAPA,IAAO,EACSjC,EAAxB2D,EADe,EACfA,KAAMzD,EADS,EACTA,MAAOC,EADE,EACFA,OACfyD,EAAS5D,EAAMyD,MAAMI,KAElBjB,EAAI,EAAGA,EAAIzC,EAAQyC,GAAKe,EAC/B,IAAK,IAAIhB,EAAI,EAAGA,EAAIzC,EAAOyC,GAAKgB,EAE9B,IADA,IAAMd,EAAQxC,KAAKC,MAAsB,IAAhBD,KAAKoC,UACrBqB,EAAKlB,EAAGkB,EAAKzD,KAAKkC,IAAIK,EAAIe,EAAMxD,GAAS2D,IAChD,IAAK,IAAIC,EAAKpB,EAAGoB,EAAK1D,KAAKkC,IAAII,EAAIgB,EAAMzD,GAAQ6D,IAAM,CACrD,IAAMC,EAA0B,GAAnBF,EAAK5D,EAAQ6D,GAC1BH,EAAOI,GAAOnB,EACde,EAAOI,EAAM,GAAKnB,EAClBe,EAAOI,EAAM,GAAKnB,EAClBe,EAAOI,EAAM,GAAK,IAM1B/B,EAAIgC,aAAajE,EAAMyD,MAAO,EAAG,GAGnC,SAAStB,EAAcC,GACC,KAAlBA,EAAM8B,QACJlE,EAAM2D,KAAO,GACf3D,EAAM2D,OAEmB,KAAlBvB,EAAM8B,SACXlE,EAAM2D,KAAO,KACf3D,EAAM2D,OChDZ,IAAMQ,EAAQ,CHAC,YAAwC,IAAlBjE,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,OAa1C,OAZAH,EAAQ,CACNE,QACAC,SACAC,OAAQC,KAAKC,MAAMJ,EAAQ,KAC3BK,OAAQF,KAAKC,MAAMH,EAAS,KAC5BY,QAAQ,EACRC,WAAY,EACZJ,UAAW,GACXD,OAAQ,IAAI0C,EAAgB,GAAI,GAAI,GAAI,GAAI,OAC5CxC,MAAO,IAAI6B,EAAc,IAAK,GAAI,QAAS,WAAY,IACvD5B,SAAU,IAEL,CACLsD,KAAM,QACNnE,SACAO,SACAwB,SACAG,gBACAG,gBErBW,YAA6C,IAAvBL,EAAsB,EAAtBA,IAAK/B,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,OAO/C,OANAH,EAAQ,CACN2D,KAAM,EACNzD,QACAC,SACAsD,MAAOxB,EAAIyB,gBAAgBxD,EAAOC,IAE7B,CACLiE,KAAM,QACNnE,SACA+B,SACAG,mBCPAkC,EAAY,EAEZrE,EAAQ,GAENsE,EAAQ,CACZC,eAAgB,EAChBvD,WAAY,EACZiB,IAAK,KACLuC,UAAW,EACXtE,MAAO,EACPC,OAAQ,EACRsD,MAAO,MA6ET,SAASgB,EAAYrC,GACfpC,EAAMyE,aACRzE,EAAMyE,YAAYrC,GAItB,SAASD,EAAcC,GACC,IAAlBA,EAAM8B,SACR9B,EAAMsC,iBACNL,GAAaA,EAAY,GAAKF,EAAM3C,OACpCxB,EAAQmE,EAAME,GAAWC,GACzBA,EAAMC,eAAiB,EACvBD,EAAMtD,WAAa,GAGfhB,EAAMmC,eACRnC,EAAMmC,cAAcC,GAK1B,SAASE,EAAYF,GACfpC,EAAMsC,aACRtC,EAAMsC,YAAYF,GAiBPuC,MAlHf,WACE,IAAMC,EAAYC,IAAMC,OAAO,MACzBC,EAAaF,IAAMC,OAAO,MAC1BE,EAAkBH,IAAMC,OAAO,GAgErC,OA9DAD,IAAMI,WAAU,WACd,IAAMC,EAASN,EAAUO,QACnBzD,EAAOwD,EAAOE,wBACpBd,EAAMrC,IAAMiD,EAAOG,WAAW,MAC9Bf,EAAMpE,MAAQwB,EAAKxB,MAAQoF,OAAOC,iBAClCjB,EAAMnE,OAASuB,EAAKvB,OAASmF,OAAOC,iBAEpCvF,EAAQmE,EAAME,GAAWC,GA+CzB,OALAgB,OAAOE,iBAAiB,QAASf,GACjCa,OAAOE,iBAAiB,UAAWrD,GACnCmD,OAAOE,iBAAiB,QAASlD,GAEjCyC,EAAWI,QAAUM,uBA5CL,SAAVC,EAAUC,GACd,QAAgCC,IAA5BZ,EAAgBG,QAAuB,CACzCb,EAAME,UAAYmB,EAAcX,EAAgBG,QAEhD,IAAMzD,EAAOwD,EAAOE,wBACpBF,EAAOhF,MAAQwB,EAAKxB,MAAQoF,OAAOC,iBACnCL,EAAO/E,OAASuB,EAAKvB,OAASmF,OAAOC,iBAEjCL,EAAOhF,QAAUoE,EAAMpE,OAASgF,EAAO/E,SAAWmE,EAAMnE,SAC1DmE,EAAMC,eAAiB,EACvBD,EAAMtD,WAAa,EACnBsD,EAAMpE,MAAQgF,EAAOhF,MACrBoE,EAAMnE,OAAS+E,EAAO/E,OAElBH,EAAMC,QACRD,EAAMC,OAAOqE,IAIjB,IAAMuB,EAAKC,YAAYC,MAEnB/F,EAAMQ,QACRR,EAAMQ,OAAO8D,GAGXtE,EAAMgC,QACRhC,EAAMgC,OAAOsC,GAGf,IAAM0B,EAAKF,YAAYC,MACvBzB,EAAMC,gBAAkByB,EAAKH,EAC7BvB,EAAMtD,aAwDd,YAAoE,IAA3CiB,EAA0C,EAA1CA,IAAK/B,EAAqC,EAArCA,MAAOqE,EAA8B,EAA9BA,eAAgBvD,EAAc,EAAdA,WAC7CS,EAAOzB,EAAMoE,KAAO,MAAQG,EAAiBvD,GAAYkC,QAAQ,GAAK,OAC5EjB,EAAIkB,UAAY,QAChBlB,EAAIgB,KAAO,iBACXhB,EAAIgE,UAAY,SAChBhE,EAAIiE,aAAe,MACnBjE,EAAIkE,cAAgB,EACpBlE,EAAImE,cAAgB,EACpBnE,EAAIoE,YAAc,wBAClBpE,EAAIqE,WAAa,EACjBrE,EAAImB,SAAS3B,EAAMvB,EAAQ,EAAG,GAhExBqG,CAAcjC,GAGhBU,EAAgBG,QAAUQ,EAC1BZ,EAAWI,QAAUM,sBAAsBC,MAQtC,WACLJ,OAAOkB,oBAAoB,QAAS/B,GACpCa,OAAOkB,oBAAoB,UAAWrE,GACtCmD,OAAOkB,oBAAoB,QAASlE,GACpCmE,qBAAqB1B,EAAWI,YAEjC,CAACP,IAGF,yBAAK8B,UAAU,UACb,4BAAQA,UAAU,SAASC,IAAK/B,MC7ElBgC,QACW,cAA7BtB,OAAOuB,SAASC,UAEa,UAA7BxB,OAAOuB,SAASC,UAEhBxB,OAAOuB,SAASC,SAASC,MACvB,2DCZJC,IAAShF,OACP,kBAAC,IAAMiF,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.21786820.chunk.js","sourcesContent":["import { collideRectangles } from '../lib/collision';\r\n\r\nlet state = {}\r\n\r\nexport default function initialize({ width, height }) {\r\n  state = {\r\n    width,\r\n    height,\r\n    scaleX: Math.floor(width / 320),\r\n    scaleY: Math.floor(height / 180),\r\n    paused: false,\r\n    frameCount: 0,\r\n    obstacles: [],\r\n    player: new PlayerComponent(10, 75, 30, 30, 'red'),\r\n    score: new TextComponent(220, 25, 'white', 'Consolas', 15),\r\n    keyState: {}\r\n  };\r\n  return {\r\n    name: 'dodge',\r\n    resize,\r\n    update,\r\n    render,\r\n    handleKeyDown,\r\n    handleKeyUp\r\n  };\r\n}\r\n\r\nfunction resize({ width, height }) {\r\n  state.width = width;\r\n  state.height = height;\r\n  state.scaleX = Math.floor(width / 320);\r\n  state.scaleY = Math.floor(height / 180);\r\n}\r\n\r\nfunction update() {\r\n  const { player, obstacles, score, keyState } = state;\r\n\r\n  if (!state.paused) {\r\n    state.frameCount++;\r\n\r\n    if ((state.frameCount % 150) === 1) {\r\n      const h = getRandomNumber(20, 100);\r\n      const gap = getRandomNumber(50, 100);\r\n      const w = Math.floor(state.width / state.scaleX);\r\n      obstacles.push(new ObstacleComponent(w, 0, 10, h, 'green'));\r\n      obstacles.push(new ObstacleComponent(w, h + gap, 10, w - h - gap, 'green'));\r\n    }\r\n\r\n    player.update(keyState);\r\n\r\n    for (let i = 0; i < obstacles.length; i++) {\r\n      obstacles[i].update();\r\n    }\r\n\r\n    score.text = 'SCORE: ' + state.frameCount;\r\n\r\n    const rect = player.getRectangle();\r\n\r\n    for (let i = 0; i < obstacles.length; i += 1) {\r\n      if (collideRectangles(rect, obstacles[i].getRectangle())) {\r\n        state.paused = true;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction render({ ctx }) {\r\n  const { width, height, player, obstacles, score } = state;\r\n\r\n  ctx.clearRect(0, 0, width, height);\r\n\r\n  player.render(ctx);\r\n\r\n  for (let i = 0; i < obstacles.length; i += 1) {\r\n    obstacles[i].render(ctx);\r\n  }\r\n\r\n  score.render(ctx);\r\n}\r\n\r\nfunction handleKeyDown(event) {\r\n  state.keyState[event.code] = true;\r\n}\r\n\r\nfunction handleKeyUp(event) {\r\n  state.keyState[event.code] = false;\r\n}\r\n\r\nfunction getRandomNumber(min, max) {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\n\r\nclass TextComponent {\r\n  constructor(x, y, color, fontName, fontSize, text) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.color = color;\r\n    this.fontName = fontName;\r\n    this.fontSize = fontSize;\r\n    this.text = text;\r\n  }\r\n\r\n  render(ctx) {\r\n    ctx.font = (this.fontSize * Math.min(state.scaleX, state.scaleY)).toFixed(0) + 'px ' + this.fontName;\r\n    ctx.fillStyle = this.color;\r\n    ctx.fillText(this.text, this.x * state.scaleX, this.y * state.scaleY);\r\n  }\r\n}\r\n\r\nclass PlayerComponent {\r\n  constructor(x, y, width, height, color) {\r\n    this.width = width;\r\n    this.height = height;\r\n    this.x = x;\r\n    this.y = y;\r\n    this.color = color;\r\n    this.speedX = 0;\r\n    this.speedY = 0;\r\n  }\r\n\r\n  update(keyState) {\r\n    this.speedX = 0;\r\n    this.speedY = 0;\r\n\r\n    if (keyState['KeyW'] || keyState['ArrowUp']) {\r\n      this.speedY -= 1;\r\n    }\r\n\r\n    if (keyState['KeyS'] || keyState['ArrowDown']) {\r\n      this.speedY += 1;\r\n    }\r\n\r\n    if (keyState['KeyA'] || keyState['ArrowLeft']) {\r\n      this.speedX -= 1;\r\n    }\r\n\r\n    if (keyState['KeyD'] || keyState['ArrowRight']) {\r\n      this.speedX += 1;\r\n    }\r\n\r\n    this.x += this.speedX;\r\n    this.y += this.speedY;\r\n  }\r\n\r\n  render(ctx) {\r\n    ctx.fillStyle = this.color;\r\n    ctx.fillRect(this.x * state.scaleX, this.y * state.scaleY, this.width * state.scaleX, this.height * state.scaleY);\r\n  }\r\n\r\n  getRectangle() {\r\n    return {\r\n      x1: this.x,\r\n      y1: this.y,\r\n      x2: this.x + this.width,\r\n      y2: this.y + this.height\r\n    };\r\n  }\r\n}\r\n\r\nclass ObstacleComponent {\r\n  constructor(x, y, width, height, color) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.width = width;\r\n    this.height = height;\r\n    this.color = color;\r\n  }\r\n\r\n  update() {\r\n    this.x--;\r\n    if (this.x + this.width <= 0) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  render(ctx) {\r\n    ctx.fillStyle = this.color;\r\n    ctx.fillRect(this.x * state.scaleX, this.y * state.scaleY, this.width * state.scaleX, this.height * state.scaleY);\r\n  }\r\n\r\n  getRectangle() {\r\n    return {\r\n      x1: this.x,\r\n      y1: this.y,\r\n      x2: this.x + this.width,\r\n      y2: this.y + this.height\r\n    };\r\n  }\r\n}\r\n","export function collideRectangles(r1, r2) {\r\n  if (r1.x2 <= r2.x1 || r1.x1 >= r2.x2 || r1.y2 <= r2.y1 || r1.y1 >= r2.y2) {\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\n\r\nexport function collideCircles(cx, cy, radius, tx, ty, targetRadius) {\r\n  const distance = (cx - tx) * (cx - tx) + (cy - ty) * (cy - ty);\r\n  if (distance < (radius + targetRadius) * (radius + targetRadius)) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nexport function collideCircleRectangle(cx, cy, radius, x1, y1, x2, y2) {\r\n  const epsilon = radius / 3.0;\r\n  let type = 0;\r\n  let testX = cx;\r\n  let testY = cy;\r\n  if (cx < x1 - epsilon) {\r\n    type |= 1;\r\n    testX = x1;\r\n  } else if (cx > x2 + epsilon) {\r\n    type |= 1;\r\n    testX = x2;\r\n  }\r\n  if (cy < y1 - epsilon) {\r\n    type |= 2;\r\n    testY = y1;\r\n  } else if (cy > y2 + epsilon) {\r\n    type |= 2;\r\n    testY = y2;\r\n  }\r\n  const distX = cx - testX;\r\n  const distY = cy - testY;\r\n  const distance = (distX * distX) + (distY * distY);\r\n  if (distance <= radius * radius) {\r\n    return type;\r\n  }\r\n  return 0;\r\n}\r\n","let state = {}\r\n\r\nexport default function initialize({ ctx, width, height }) {\r\n  state = {\r\n    size: 1,\r\n    width,\r\n    height,\r\n    image: ctx.createImageData(width, height)\r\n  };\r\n  return {\r\n    name: 'noise',\r\n    resize,\r\n    render,\r\n    handleKeyDown\r\n  };\r\n}\r\n\r\nfunction resize({ ctx, width, height }) {\r\n  state.width = width;\r\n  state.height = height;\r\n  state.image = ctx.createImageData(width, height);\r\n}\r\n\r\nfunction render({ ctx }) {\r\n  const { size, width, height } = state;\r\n  const buffer = state.image.data;\r\n\r\n  for (let y = 0; y < height; y += size) {\r\n    for (let x = 0; x < width; x += size) {\r\n      const color = Math.floor(Math.random() * 256);\r\n      for (let dy = y; dy < Math.min(y + size, height); dy++) {\r\n        for (let dx = x; dx < Math.min(x + size, width); dx++) {\r\n          const pos = (dy * width + dx) * 4;\r\n          buffer[pos] = color;\r\n          buffer[pos + 1] = color;\r\n          buffer[pos + 2] = color;\r\n          buffer[pos + 3] = 255;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  ctx.putImageData(state.image, 0, 0);\r\n}\r\n\r\nfunction handleKeyDown(event) {\r\n  if (event.keyCode === 40) {\r\n    if (state.size > 1) {\r\n      state.size--;\r\n    }\r\n  } else if (event.keyCode === 38) {\r\n    if (state.size < 100) {\r\n      state.size++;\r\n    }\r\n  }\r\n}","import React from 'react';\r\nimport dodge from './games/dodge';\r\nimport noise from './games/noise';\r\n\r\nconst games = [dodge, noise];\r\n\r\nlet gameIndex = 0;\r\n\r\nlet state = {};\r\n\r\nconst props = {\r\n  totalFrameTime: 0,\r\n  frameCount: 0,\r\n  ctx: null,\r\n  deltaTime: 0,\r\n  width: 0,\r\n  height: 0,\r\n  image: null\r\n};\r\n\r\nfunction App() {\r\n  const canvasRef = React.useRef(null);\r\n  const requestRef = React.useRef(null);\r\n  const previousTimeRef = React.useRef(0);\r\n\r\n  React.useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const rect = canvas.getBoundingClientRect()\r\n    props.ctx = canvas.getContext('2d');\r\n    props.width = rect.width * window.devicePixelRatio;\r\n    props.height = rect.height * window.devicePixelRatio;\r\n\r\n    state = games[gameIndex](props);\r\n\r\n    const animate = currentTime => {\r\n      if (previousTimeRef.current !== undefined) {\r\n        props.deltaTime = currentTime - previousTimeRef.current;\r\n\r\n        const rect = canvas.getBoundingClientRect();\r\n        canvas.width = rect.width * window.devicePixelRatio;\r\n        canvas.height = rect.height * window.devicePixelRatio;\r\n\r\n        if (canvas.width !== props.width || canvas.height !== props.height) {\r\n          props.totalFrameTime = 0;\r\n          props.frameCount = 0;\r\n          props.width = canvas.width;\r\n          props.height = canvas.height;\r\n\r\n          if (state.resize) {\r\n            state.resize(props);\r\n          }\r\n        }\r\n\r\n        const t0 = performance.now();\r\n\r\n        if (state.update) {\r\n          state.update(props);\r\n        }\r\n\r\n        if (state.render) {\r\n          state.render(props);\r\n        }\r\n\r\n        const t1 = performance.now();\r\n        props.totalFrameTime += t1 - t0;\r\n        props.frameCount++;\r\n\r\n        drawFrameTime(props);\r\n      }\r\n\r\n      previousTimeRef.current = currentTime;\r\n      requestRef.current = requestAnimationFrame(animate);\r\n    }\r\n\r\n    window.addEventListener('click', handleClick);\r\n    window.addEventListener('keydown', handleKeyDown);\r\n    window.addEventListener('keyup', handleKeyUp);\r\n\r\n    requestRef.current = requestAnimationFrame(animate);\r\n    return () => {\r\n      window.removeEventListener('click', handleClick);\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n      window.removeEventListener('keyup', handleKeyUp);\r\n      cancelAnimationFrame(requestRef.current);\r\n    }\r\n  }, [canvasRef]);\r\n\r\n  return (\r\n    <div className=\"screen\">\r\n      <canvas className=\"canvas\" ref={canvasRef}></canvas>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction handleClick(event) {\r\n  if (state.handleClick) {\r\n    state.handleClick(event);\r\n  }\r\n}\r\n\r\nfunction handleKeyDown(event) {\r\n  if (event.keyCode === 9) {\r\n    event.preventDefault();\r\n    gameIndex = (gameIndex + 1) % games.length;\r\n    state = games[gameIndex](props);\r\n    props.totalFrameTime = 0;\r\n    props.frameCount = 0;\r\n  }\r\n  else {\r\n    if (state.handleKeyDown) {\r\n      state.handleKeyDown(event);\r\n    }\r\n  }\r\n}\r\n\r\nfunction handleKeyUp(event) {\r\n  if (state.handleKeyUp) {\r\n    state.handleKeyUp(event);\r\n  }\r\n}\r\n\r\nfunction drawFrameTime({ ctx, width, totalFrameTime, frameCount }) {\r\n  const text = state.name + ' (' + (totalFrameTime / frameCount).toFixed(2) + ' ms)';\r\n  ctx.fillStyle = 'white';\r\n  ctx.font = '20px monospace';\r\n  ctx.textAlign = 'center';\r\n  ctx.textBaseline = 'top';\r\n  ctx.shadowOffsetX = 1;\r\n  ctx.shadowOffsetY = 1;\r\n  ctx.shadowColor = 'rgba(0.2,0.2,0.2,1.0)';\r\n  ctx.shadowBlur = 4;\r\n  ctx.fillText(text, width / 2, 0);\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}